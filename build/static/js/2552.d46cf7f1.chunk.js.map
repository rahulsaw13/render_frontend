{"version":3,"file":"static/js/2552.d46cf7f1.chunk.js","mappings":"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","sources":["api/api.js","components/common/Image.jsx","constants/apiurl.js","constants/routesurl.js","assets/about-us1.svg","assets/about-us2.svg","assets/about-us3.svg","assets/about-us4.svg","pages/AboutUs.jsx","pages/userpage/Footer.jsx","useCartStore.js","../node_modules/zustand/esm/vanilla.mjs","../node_modules/zustand/esm/react.mjs"],"sourcesContent":["import axios from 'axios';\nconst apiBaseURL = process.env.REACT_APP_BASE_URL;\n\nexport const allApi = (dataurl, data, method, contentType) => {\n    const headers = {\n        'Content-Type': 'application/json',\n    }\n    if(contentType){\n        headers['Content-Type'] = 'multipart/form-data';\n        let requestData = new FormData();\n        Object.keys(data).forEach((key) => {\n            requestData.append(key, data[key]);\n        });\n        if ('post' === method) {\n            return axios.post(`${apiBaseURL}/${dataurl}`, requestData, { headers: headers });\n        }\n    }\n    if ('post' === method) {\n        return axios.post(`${apiBaseURL}/${dataurl}`, JSON.stringify(data), { headers: headers });\n    }\n    if ('get' === method) {\n        return axios.get(`${apiBaseURL}/${dataurl}`);\n    }\n    if ('delete' === method) {\n        return axios.delete(`${apiBaseURL}/${dataurl}`);\n    }\n    if ('put' === method) {\n        return axios?.put(`${apiBaseURL}/${dataurl}`, data);\n    }\n};\n\nexport const allApiWithHeaderToken = (dataurl, data, method, contentType, responseType) => {\n    let token = JSON.parse(localStorage.getItem('token'));\n    const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n    }\n    const axiosInstance = axios.create({\n        baseURL: apiBaseURL,\n        headers: headers,\n        responseType: responseType ? responseType : \"json\"\n    });\n    // Handle File content\n    if(contentType){\n        headers['Content-Type'] = 'multipart/form-data';\n        let requestData = new FormData();\n        Object.keys(data).forEach((key) => {\n            requestData.append(key, data[key]);\n        });\n        if ('post' === method) {\n            return axios.post(`${apiBaseURL}/${dataurl}`, requestData, { headers: headers });\n        }\n        if ('put' === method) {\n            return axios?.put(`${apiBaseURL}/${dataurl}`, requestData, { headers: headers });\n        }\n    }\n   else{\n        // Interceptor\n        axiosInstance.interceptors.response.use(\n        (response) => {\n            // Return the response if successful\n            return response;\n        },\n        (error) => {\n            // If error response has a status of 401, redirect to login\n            if (error.response && error.response.status === 401) {\n                localStorage.removeItem('token');  // Remove invalid token\n                window.location.href = '/login';  \n            }\n            return Promise.reject(error); // Reject promise if something goes wrong\n        }\n        );\n        if ('post' === method) {\n            return axiosInstance.post(`${apiBaseURL}/${dataurl}`, JSON.stringify(data), { headers: headers });\n        }\n        if ('get' === method) {\n            return axiosInstance.get(`${apiBaseURL}/${dataurl}`, { headers: headers });\n        }\n        if ('delete' === method) {\n            return axiosInstance.delete(`${apiBaseURL}/${dataurl}`, { headers: headers });\n        }\n        if ('put' === method) {\n            return axiosInstance?.put(`${apiBaseURL}/${dataurl}`, data, { headers: headers });\n        }\n    }\n};","import { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css'; // Optional, if using their default blur\n\nconst Image = ({ alt, height, src, width, className, onClick }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLoad = () => {\n    setIsLoading(false);\n  };\n\n\n  return (\n    <div className=\"relative h-full\">\n      {isLoading && (\n        <div className=\"h-full inset-0 z-50 flex items-center justify-center bg-white\">\n          <div className=\"relative flex flex-col items-center justify-center\">\n            <div className=\"h-8 w-8 animate-spin rounded-full border border-gray-200 border-t-[#caa446]\"></div>\n          </div>\n        </div>\n      )}\n      <LazyLoadImage\n        alt={alt}\n        height={height}\n        src={src}\n        width={width}\n        onClick={onClick}\n        beforeLoad={handleLoad}\n        afterLoad={() => setIsLoaded(true)}\n        className={`${className} transition-all duration-700 ease-in-out ${\n          isLoaded ? 'blur-0' : 'blur-[1px]'\n        }`}\n      />\n    </div>\n  );\n};\n\nexport default Image;","export const API_CONSTANTS = {\n    SIGNUP: \"users\",\n    LOGIN: \"users/sign_in\",\n    LOGOUT: \"users/sign_out\",\n    FORGOT_PASSWORD: \"users/password\",\n    RESET_PASSWORD: \"users/password\",\n\n    // Admin use\n    COMMON_CATEGORIES_URL: \"api/v1/categories\",\n    COMMON_SUB_CATEGORIES_URL: \"api/v1/sub_categories\",\n    COMMON_PRODUCTS_URL: \"api/v1/products\",\n    COMMON_INVENTORY_URL: \"api/v1/inventories\",\n    COMMON_ORDER_URL: \"api/v1/orders\",\n    COMMON_COUPON_URL: \"api/v1/coupons\",\n    COMMON_REPORT_URL: \"api/v1/reports\",\n    COMMON_DISCOUNT_URL: \"api/v1/discounts\",\n    COMMON_USERS_URL: \"api/v1/users\",\n    COMMON_ADRESESS_URL: \"api/v1/addresses\",\n    COMMON_ADMIN_DASHBOARD_URL: \"api/v1/dashboard\",\n    COMMON_BLOGS_URL: \"api/v1/blogs\",\n    COMMON_PRODUCT_REVIEW_URL: \"api/v1/product_reviews\",\n    COMMON_FEST_PRODUCTS_URL: \"api/v1/fest_specials\",\n    COMMON_SUBSCIBER_URL: \"api/v1/subscribers\",\n    COMMON_CUSTOMER_ENQUIRY_URL: \"api/v1/contact_details\",\n    \n    // General use\n    BLOGS_URL: \"api/v1/user_dashboard/latest_blogs\",\n    SNACK_RANGE_URL : \"api/v1/user_dashboard/snacks_category\",\n    SPECIALITY_CATEGORY_URL : \"api/v1/user_dashboard/speciality_category\",\n    GIFTING_CATEGORY_URL : \"api/v1/user_dashboard/gifting_category\",\n    ALL_CATEGORY_URL : \"api/v1/user_dashboard/all_categories\",\n    ALL_PRODUCTS_URL : \"api/v1/user_dashboard/all_active_products\",\n    MENU_LIST_URL: \"api/v1/user_dashboard/nav_menu_list\",\n    GET_PRODUCT_BY_SUBCATEGORY_ID_URL: \"api/v1/user_dashboard/get_products_by_subcategory\",\n    ALL_SUB_CATEGORY_URL : \"api/v1/user_dashboard/all_sub_categories\",\n    PRODUCT_REVIEW_URL : \"api/v1/user_dashboard/add_user_review\",\n    PRODUCT_REVIEW_BY_ID_URL : \"api/v1/user_dashboard/get_product_review_by_id\",\n    ACTIVE_FEST_SPECIAL: \"api/v1/user_dashboard/get_active_fest_special\",\n    SUBSCRIBE_USER_BY_MAIL_URL: \"api/v1/user_dashboard/subscribe_user_by_email\",\n    SEND_PHONE_OTP_URL: \"api/v1/user_dashboard/send_user_otp\",\n    VERIFY_PHONE_OTP_URL: \"api/v1/user_dashboard/verify_user_otp\",\n    PAYMENT_INTENT_CREATE: \"api/v1/payment_transactions/create_payment_intent\",\n    PAYMENT_VERIFY: \"api/v1/payment_transactions/verify_payment\",\n    ADD_CONTACT_DETAILS: \"api/v1/user_dashboard/add_contact_details\",\n    GET_ALL_SUBCATEGORY_BY_CATEGORY_NAME_URL: \"api/v1/user_dashboard/get_subcategories_by_category_name\",\n    GET_PRODUCT_BY_CATEGORY_NAME_URL: \"api/v1/user_dashboard/get_products_by_category_name\",\n    GET_PRODUCT_BY_SUB_CATEGORY_NAME_URL: \"api/v1/user_dashboard/get_products_by_subcategory_name\",\n    GET_PRODUCT_BY_FESTIVAL_SPECIAL_NAME_URL: \"api/v1/user_dashboard/get_products_by_festival_special_name\"\n}","export const ROUTES_CONSTANTS = {\n    // User based routes\n    HOME: \"/\",\n    VIEW_CART: \"/view-cart\",\n    VIEW_BLOG_DESCRIPTION: \"/view-blog\",\n    VIEW_COLLECTION_DESCRIPTION: \"/collection\",\n    VIEW_PRODUCT_DESCRIPTION: \"/product\",\n    SIGN_IN: \"/sign-in\",\n    REGISTER: \"/register\",\n    PAYMENT: \"/payment\",\n    PAYMENT_CONFIRMED: \"/payment-confirmed\",\n    PAYMENT_REJECTED: \"/payment-rejected\",\n    VIEW_CATEGORY_DESCRIPTION: \"/category-description\",\n    VIEW_SUB_CATEGORY_DESCRIPTION: \"/sub-category-description\",\n    ABOUT_US: \"/about-us\",\n    TRACK_ORDER: \"/track-order\",\n    CONTACT_US: \"/contact-us\",\n    TERMS_AND_CONDITION: \"/terms-condition\",\n    SHIPPING_POLICY: \"/shipping-policy\",\n    RETURN_AND_EXCHANGE_POLICY: \"/return-exchange-policy\",\n    PRIVACY_POLICY: \"/privacy-policy\",\n    \n    // Admin based routes\n    LOGIN: \"/login\",\n    SIGNUP: \"/signup\",\n    DASHBOARD: \"/dashboard\",\n    PRODUCTS: \"/dashboard/products\",\n    ORDERS: \"/dashboard/orders\",\n    INVENTORY: \"/dashboard/inventories\",\n    CATEGORIES: \"/dashboard/categories\",\n    SUB_CATEGORIES: \"/dashboard/sub-categories\",\n    COUPONS: \"/dashboard/coupons\",\n    REPORTS: \"/dashboard/reports\",\n    USERS: \"/dashboard/users\",\n    ADDRESSES: \"/dashboard/addresses\",\n    DISCOUNT: \"/dashboard/discounts\",\n    REVIEWS: \"/dashboard/reviews\",\n    BLOGS: \"/dashboard/blogs\",\n    FEST: \"/dashboard/fests\",\n    SUBSCRIBER: \"/dashboard/subscribers\",\n    CUSTOMER_ENQUIRIES: \"/dashboard/customer-enquiries\",\n    CREATE_CATEGORY: \"/dashboard/create-category\",\n    CREATE_SUB_CATEGORY: \"/dashboard/create-sub-category\",\n    CREATE_PRODUCT: \"/dashboard/create-product\",\n    CREATE_INVENTORY: \"/dashboard/create-inventory\",\n    CREATE_ORDER: \"/dashboard/create-order\",\n    CREATE_COUPON: \"/dashboard/create-coupon\",\n    CREATE_REPORT: \"/dashboard/create-report\",\n    CREATE_USER: \"/dashboard/create-user\",\n    CREATE_DISCOUNT: \"/dashboard/create-discount\",\n    CREATE_ADDRESESS: \"/dashboard/create-addresess\",\n    CREATE_BLOG: \"/dashboard/create-blog\",\n    CREATE_FEST_PRODUCT: \"/dashboard/create-fest-product\",\n    EDIT_CATEGORY: \"/dashboard/edit-category\",\n    EDIT_SUB_CATEGORY: \"/dashboard/edit-sub-category\",\n    EDIT_PRODUCT: \"/dashboard/edit-product\",\n    EDIT_INVENTORY: \"/dashboard/edit-inventory\",\n    VIEW_ORDER: \"/dashboard/view-order\",\n    EDIT_COUPON: \"/dashboard/edit-coupon\",\n    EDIT_REPORT: \"/dashboard/edit-report\",\n    EDIT_USER: \"/dashboard/edit-user\",\n    EDIT_DISCOUNT: \"/dashboard/edit-discount\",\n    EDIT_ADDRESESS: \"/dashboard/edit-addresess\",\n    EDIT_BLOG: \"/dashboard/edit-blog\",\n    EDIT_FEST_PRODUCT: \"/dashboard/edit-fest-product\"\n}","var _circle, _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAboutUs1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 130,\n    height: 130,\n    viewBox: \"0 0 130 130\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 65,\n    cy: 65,\n    r: 48.5,\n    stroke: \"#2A3138\",\n    strokeWidth: 3\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.4143 77.6425H29.0559V48.5031H58.5813C71.5323 48.5031 73.5761 59.8937 73.5761 59.8937L80.8436 48.5031H88.4591L102.38 70.5965L98.019 77.6416H79.6634V74.1268H100.194L84.643 48.5028C84.643 48.5028 74.3941 65.9627 72.1939 69.364C69.9935 72.7655 65.8604 77.6409 58.7811 77.6409H47.8166V60.2935H51.2909V74.1259H59.2815C62.8153 74.1259 70.399 71.178 70.399 62.8446C70.399 54.5113 62.2925 51.9035 59.6289 51.9035H32.414V77.6401L32.4143 77.6425ZM33.5724 77.6425V65.2841H46.5427V68.6856H37.0465V77.6427H33.5722L33.5724 77.6425ZM46.5427 63.8101V60.2953H37.0465V56.5673H58.898C62.1735 56.5673 65.6514 59.1614 65.6514 62.9596C65.6514 66.7578 62.1361 69.3656 59.6295 69.3656H56.2231V60.2952H52.6331V72.767H59.6295C64.0607 72.767 69.1835 69.0016 69.1835 63.073C69.1835 57.2011 64.5245 53.1522 58.9531 53.1522H33.5731V63.81H46.5434L46.5427 63.8101ZM68.7189 77.6425L84.643 51.906L97.7292 72.7672H79.6641V69.3657H91.3605L84.6437 58.6513L73.5842 77.643H68.7203L68.7189 77.6425Z\",\n    fill: \"#2A3138\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAboutUs1);\nexport default __webpack_public_path__ + \"static/media/about-us1.fbcf735b396972a169655078c75ab9c5.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAboutUs2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 130,\n    height: 130,\n    viewBox: \"0 0 130 130\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 65,\n    cy: 65,\n    r: 48.5,\n    stroke: \"#2A3138\",\n    strokeWidth: 3\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M88.5422 57.9413L45.8399 57.9592H43.2888V59.3397L45.5644 59.3487L45.5822 59.3576L98.0888 59.3487L98.6755 57.9413C97.7155 57.9413 89.1644 57.9771 88.9955 57.9233C88.8177 57.9413 88.7466 57.9771 88.5422 57.9413ZM87.2799 64.046C87.3688 64.046 87.4666 64.028 87.5466 63.9922C88.2133 63.795 89.0577 63.5529 89.7422 63.5529C90.0533 63.544 90.3644 63.6605 90.5955 63.8667C91.1377 64.4135 90.8444 65.3996 90.7022 66.1795L89.3688 73.2164C89.2799 73.6826 89.1733 74.1487 89.1022 74.6149C88.9955 75.2603 88.9066 75.4844 88.9066 76.2553C88.9066 77.6448 89.7244 78.8102 91.0844 78.8102C92.3377 78.8102 93.3155 78.344 94.3288 77.7255C94.7999 77.4207 95.2622 77.098 95.6977 76.7484C95.8488 76.6229 96.6044 75.9954 96.6399 75.9326L96.6666 74.7762C96.5422 74.8121 96.0888 75.2872 95.911 75.4217C95.6533 75.6278 95.4133 75.8519 95.1199 76.0671C94.6577 76.3988 92.9422 77.5821 92.3999 76.5781C92.1155 76.0492 92.2133 75.332 92.3377 74.7673C92.5155 73.9874 92.7644 72.6696 92.9155 71.9077C93.1644 70.6347 93.4222 69.3976 93.6799 68.1247L94.0621 66.2512C94.2399 65.4892 94.4799 64.1804 94.6399 63.3916C94.7021 63.0688 94.7822 62.7372 94.8355 62.4413C94.8888 62.1455 95.1999 60.7381 95.1999 60.514C95.1199 60.5409 95.0399 60.5678 94.951 60.5947L87.6355 62.9433C87.3244 63.033 87.351 62.9792 87.3422 63.3647C87.3333 63.5798 87.2799 63.8487 87.2799 64.046Z\",\n    fill: \"#2A3138\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.6088 72.9834C69.6088 74.1936 69.8399 75.4396 70.6221 76.1926L70.6932 76.2553C72.1065 77.5731 74.2132 76.3271 75.4043 75.3499C76.2221 74.6597 76.9777 73.8977 77.6532 73.064C77.7954 72.8848 77.9199 72.7324 78.0532 72.5531C78.5243 71.9166 78.7288 71.576 79.1643 70.9216C79.431 70.5182 79.5465 70.2582 79.751 69.9086L79.8488 69.7742L79.6265 70.9574C79.5377 71.4236 78.9777 74.1936 78.9777 74.5521C78.9777 76.8022 80.4888 77.1876 82.3021 76.4615L82.8799 76.1926C83.0577 76.085 83.2443 76.0043 83.4221 75.8878C83.9288 75.5651 84.4088 75.1886 84.8443 74.7762C85.0043 74.6149 85.7599 73.8439 85.8399 73.6557L86.0177 72.562C85.1465 73.3868 84.5865 74.1667 83.4932 74.8569C83.0221 75.1527 81.9465 75.7623 81.6443 74.9107C81.351 74.1039 82.0532 71.7822 82.231 70.7244C82.3821 69.8369 82.7377 68.3578 82.9243 67.4255L83.271 65.7761C83.3332 65.5161 83.3865 65.2382 83.4399 64.9693C83.4843 64.7452 83.9465 62.5669 83.9554 62.4682C83.7599 62.4682 83.4399 62.4145 83.2443 62.4055C82.3465 62.3607 81.7065 62.3069 80.7465 62.3069C78.1954 62.3069 76.3021 62.8178 74.4977 64.1894L73.0221 65.4534C72.9065 65.5699 72.8088 65.6595 72.7021 65.785C72.4977 66.036 72.2665 66.2691 72.071 66.5291C71.7688 66.9145 71.4843 67.3269 71.2265 67.7482C70.6932 68.6357 70.2754 69.5949 69.991 70.5989C69.751 71.3788 69.6265 72.1766 69.6088 72.9834ZM73.4399 74.7493C73.0932 74.7404 72.7732 74.5521 72.6043 74.2473C71.9554 73.1627 72.5688 70.7154 72.8888 69.55C73.1465 68.6626 73.4754 67.811 73.8843 66.9863C74.1865 66.3856 74.8177 65.2741 75.2532 64.8348C75.3954 64.6824 75.5465 64.539 75.7154 64.4225C76.8621 63.6336 78.3377 63.7412 79.6354 64.0011C79.911 64.0549 80.791 64.2701 80.9954 64.3687C80.9777 64.5569 80.551 66.6098 80.5243 66.6815C80.471 66.8159 80.3999 66.9325 80.3465 67.058C79.991 67.9454 78.7999 69.8728 78.2488 70.6078L77.0221 72.1587C76.6843 72.571 76.3288 72.9565 75.9465 73.333C75.4932 73.7812 75.7421 73.6647 75.0488 74.1308C74.711 74.3639 74.0177 74.7493 73.4399 74.7493Z\",\n    fill: \"#2A3138\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M45.5822 59.3666L45.5644 59.3576L43.2889 59.3487V57.9682H45.84C45.84 57.8068 46.3644 55.001 46.3911 54.8486C46.7911 53.0019 48.0089 51.3166 49.9644 51.0567C50.5156 50.9939 51.0756 51.0477 51.6089 51.218C52.1867 51.4063 52.8533 51.7918 52.88 51.8007C52.9689 51.738 54.2222 50.5009 54.4 50.3216C55.0044 49.712 55.0222 49.8555 54.3911 49.7569C52.8 49.5238 50.7378 49.712 49.2444 50.3216C48.5511 50.5905 47.8844 50.9491 47.2711 51.3704L46.6489 51.8545C46.5689 51.9262 46.5067 51.9621 46.4356 52.0338C45.7689 52.6434 45.1911 53.3426 44.7289 54.1045C44.6311 54.2659 44.5333 54.4183 44.4533 54.5797C43.9378 55.5837 43.9111 55.736 43.5822 56.7132C43.52 56.8924 43.4578 57.1165 43.4133 57.3048C43.3867 57.4303 43.3689 57.502 43.3422 57.6275C43.3067 57.7351 43.2889 57.8427 43.28 57.9592H39.7422V59.3666H43.0222L42.7556 60.9264C42.6667 61.4284 42.5778 62.0021 42.4711 62.5131C42.0711 64.53 41.76 66.798 41.36 68.797C41.1556 69.8279 40.9956 70.9036 40.8 71.9614C40.1333 75.5472 39.8756 79.8142 35.0933 79.0253C34.5689 78.9357 34.1067 78.7833 33.6 78.6578L32 80.5851C33.9111 80.6299 34.9156 81.0333 36.9333 80.3072C38.2756 79.8142 39.4489 78.9536 40.3289 77.8151C40.6133 77.4476 40.7556 77.2414 41.0222 76.847C41.5467 76.0581 42.1244 74.7583 42.4533 73.8708C43.7689 70.2941 44.3022 65.9285 45.0489 62.1724C45.12 61.8407 45.5378 59.4562 45.5822 59.3666Z\",\n    fill: \"#2A3138\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M47.9555 66.4035C47.9555 66.8159 48.0266 67.2193 48.16 67.6047C48.2577 67.9364 48.4177 68.2322 48.64 68.4922C48.9244 68.8149 49.3066 69.299 49.6 69.5858C49.7955 69.7831 50.3288 70.4375 50.56 70.6795C51.36 71.549 52.08 72.2482 52.08 73.5391C52.08 74.57 51.12 75.3409 50.0977 75.3409H49.6711C48.5955 75.3409 47.0577 74.579 46.3911 74.1308L44.6666 75.9684C44.7822 75.9774 44.9511 76.067 45.0844 76.1029C45.8666 76.3629 47.0133 76.6945 47.8222 76.6856C48.0444 76.6856 48.1422 76.7214 48.3733 76.7214C49.5911 76.7214 50.8 76.4166 51.8666 75.825C52.0088 75.7533 52.1422 75.6636 52.2666 75.574C54.0888 74.2742 54.7644 72.051 53.3866 70.2134C53.0488 69.7651 52.4622 69.1018 52.0977 68.6356L50.8266 67.0669C50.3377 66.5111 49.9555 65.8746 49.9555 65.0589C49.9555 63.8218 51.1911 63.1316 52.2933 63.1316C53.1466 63.1316 53.9733 63.3377 54.4088 64.0369C54.7822 64.6286 54.5688 65.0589 54.5688 65.4533H55.4133L56.0622 62.6027L55.5288 62.4144C55.3244 62.3517 55.1733 62.3158 54.96 62.271C52.7111 61.7331 49.8577 62.513 48.5244 64.5389C48.1688 65.0858 47.9644 65.7312 47.9555 66.4035Z\",\n    fill: \"#2A3138\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M59.7066 66.3677C59.7066 66.9772 59.7689 67.1565 59.9377 67.6765C60 67.8378 60.0622 67.9992 60.1511 68.1516C60.3022 68.4564 61.1289 69.3169 61.4044 69.6396C61.4666 69.7114 61.4755 69.7472 61.5466 69.8189C61.6089 69.8817 61.6622 69.9444 61.7155 70.0072L62.8266 71.2801C62.8889 71.3429 62.9422 71.3877 63.0044 71.4594C63.8044 72.4186 64.2666 73.8529 63.2355 74.812C62.3022 75.6816 60.6577 75.314 59.6444 74.9106C59.2444 74.7403 58.8444 74.5521 58.4711 74.328C58.3644 74.2652 58.2133 74.1397 58.08 74.1308L56.4266 75.9415C57.1022 76.3001 58.9155 76.6945 59.7066 76.6945C60.8711 76.6945 61.3866 76.7035 62.5155 76.318C64.7111 75.583 66.5422 73.4315 65.6444 71.1546C65.5111 70.8229 65.3511 70.5092 65.1466 70.2223C64.8622 69.8458 64.1955 69.0659 63.8666 68.6625C63.44 68.1247 63.0133 67.6316 62.5955 67.0938C62.3111 66.7262 62.2311 66.6993 62.0177 66.2691C61.7066 65.6326 61.5733 64.8796 61.92 64.2252C62.0355 64.0101 62.1955 63.8308 62.3911 63.6873C63.5644 62.7102 66.3911 62.9523 66.3911 64.8706C66.3822 65.0589 66.3555 65.2471 66.2933 65.4264H67.1733L67.7866 62.5758C67.5289 62.513 67.2089 62.3786 66.7555 62.271C65.6 61.9931 64.0444 62.0738 62.9777 62.4951C62.6666 62.6206 62.4533 62.7102 62.1689 62.8537C61.6622 63.1136 61.2089 63.4543 60.8177 63.8666C60.1955 64.4852 59.7155 65.3906 59.7066 66.3677Z\",\n    fill: \"#2A3138\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M34.2133 80.9706H33.3067C32.8444 80.9706 32.4978 80.9079 32.0444 80.9079V81.1051H93.6089C93.6355 80.9975 93.9644 80.2804 94.0533 80.11C94.1244 80.0025 94.1689 79.8859 94.1955 79.7604H39.7422C38.0444 79.7604 39.1022 79.7335 37.44 80.3521C36.5244 80.7017 35.2622 80.9706 34.2133 80.9706Z\",\n    fill: \"#2A3138\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M91.0666 56.3547C91.1111 56.5251 91.1733 56.6326 91.2 56.7761C91.0133 56.8298 90.64 57.4215 89.2089 57.6456C89.0666 57.6725 88.9155 57.6904 88.7644 57.6904C88.5066 57.6904 88.5422 57.6904 88.5422 57.9414C88.7466 57.9862 88.8266 57.9414 88.9955 57.9414C89.6622 57.8249 89.9733 57.8249 90.6489 57.4663C90.8711 57.3498 91.0755 57.2063 91.2711 57.045C91.4755 56.8657 91.6889 56.9553 92.1689 56.8657C93.3333 56.6595 94.1244 55.9603 94.6844 55.1177C95.8222 53.3875 96.1422 50.8775 96.1422 48H96.08C96.0355 48.5199 95.0044 50.0618 94.5777 50.5459C94.5066 50.6265 94.48 50.6803 94.4 50.761L92.8355 52.4194C92.5422 52.7421 92.1333 53.1903 91.8844 53.522C91.52 53.9971 91.1733 54.526 91.0489 55.1356C90.9511 55.539 90.96 55.9603 91.0666 56.3547Z\",\n    fill: \"#2A3138\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M90.8355 55.4134C90.8 55.3506 90.7644 55.2879 90.72 55.2251C90.32 54.6693 89.5466 54.5438 88.9955 54.9472C88.9244 54.9921 88.8622 55.0548 88.8088 55.1176C88.5866 55.3596 88.4711 55.6016 88.4711 56.0588C88.4711 56.4353 88.6311 56.6863 88.8533 56.9194C89.3333 57.4035 90.1155 57.4035 90.5955 56.9104C90.6133 56.8925 90.6222 56.8835 90.64 56.8656C90.8088 56.6684 90.9155 56.4263 90.96 56.1664C90.9866 55.9064 90.9422 55.6464 90.8355 55.4134Z\",\n    fill: \"#2A3138\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAboutUs2);\nexport default __webpack_public_path__ + \"static/media/about-us2.8a5ed1c1f3bf537ff6e9968622ba2709.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAboutUs3(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 130,\n    height: 130,\n    viewBox: \"0 0 130 130\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M65 17.8904C38.9821 17.8904 17.8904 38.9821 17.8904 65C17.8904 91.0179 38.9821 112.11 65 112.11C91.0179 112.11 112.11 91.0179 112.11 65C112.11 38.9821 91.0179 17.8904 65 17.8904ZM17 65C17 38.4903 38.4903 17 65 17C91.5097 17 113 38.4903 113 65C113 91.5097 91.5097 113 65 113C38.4903 113 17 91.5097 17 65Z\",\n    fill: \"#2A3138\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M65 15.8873C37.8758 15.8873 15.8873 37.8758 15.8873 65C15.8873 92.1242 37.8758 114.113 65 114.113C92.1242 114.113 114.113 92.1242 114.113 65C114.113 37.8758 92.1242 15.8873 65 15.8873ZM15 65C15 37.3858 37.3858 15 65 15C92.6142 15 115 37.3858 115 65C115 92.6142 92.6142 115 65 115C37.3858 115 15 92.6142 15 65Z\",\n    fill: \"#2A3138\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M65 38.9185C50.5952 38.9185 38.9181 50.5955 38.9181 65.0003C38.9181 79.4052 50.5952 91.0822 65 91.0822C79.4048 91.0822 91.0819 79.4052 91.0819 65.0003C91.0819 50.5955 79.4048 38.9185 65 38.9185ZM37.6982 65.0003C37.6982 49.9218 49.9214 37.6985 65 37.6985C80.0786 37.6985 92.3019 49.9218 92.3019 65.0003C92.3019 80.0789 80.0786 92.3022 65 92.3022C49.9214 92.3022 37.6982 80.0789 37.6982 65.0003Z\",\n    fill: \"#2A3138\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.1355 43.8988C38.5455 43.9299 38.002 43.7203 37.503 43.27L33.5802 39.7332C33.0811 39.284 32.8172 38.7639 32.7861 38.1738C32.755 37.5849 32.9647 37.0404 33.4149 36.5413C33.8641 36.0422 34.3843 35.7783 34.9743 35.7472C35.5643 35.7173 36.1078 35.9258 36.6068 36.376L37.4364 37.1236L36.4882 38.1749L35.6586 37.4274C35.4567 37.2456 35.2427 37.1568 35.0187 37.1613C34.7935 37.1668 34.5994 37.26 34.4353 37.4419C34.2711 37.6237 34.1979 37.8267 34.2157 38.0507C34.2334 38.2748 34.3443 38.4777 34.5462 38.6596L38.469 42.1964C38.6708 42.3783 38.8849 42.467 39.1089 42.4626C39.334 42.457 39.5281 42.3639 39.6923 42.182C39.8564 42.0001 39.9296 41.7972 39.9118 41.5731C39.8941 41.3491 39.7832 41.1461 39.5813 40.9631L38.5699 40.0515L39.5181 39.0001L40.5296 39.9117C41.0287 40.362 41.2926 40.8811 41.3237 41.4711C41.3547 42.0611 41.1451 42.6046 40.6948 43.1036C40.2446 43.6027 39.7255 43.8678 39.1355 43.8977V43.8988Z\",\n    fill: \"#2A3138\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.3673 31.2126L42.7389 28.8835L43.513 30.0037L41.3292 31.512L42.8376 33.6958L44.5733 32.4969L45.3474 33.617L43.6117 34.8159L45.1977 37.1117L47.3814 35.6034L48.1555 36.7235L44.784 39.0526L39.3684 31.2115L39.3673 31.2126Z\",\n    fill: \"#2A3138\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.1866 33.9798L51.7955 30.6837L51.0968 30.9521L52.5086 34.6242L51.1622 35.1421L47.7418 26.2474L49.8513 25.4367C50.4945 25.1894 51.0812 25.1849 51.6114 25.4234C52.1404 25.6618 52.5297 26.1032 52.777 26.7476L53.153 27.7258C53.3094 28.1328 53.367 28.5232 53.3271 28.8992C53.2872 29.2752 53.1519 29.6079 52.9245 29.8996L55.5852 33.4419L54.1877 33.9798H54.1866ZM50.6088 29.6822L51.3075 29.4138C51.5703 29.3129 51.7456 29.1631 51.8343 28.9635C51.923 28.7639 51.9164 28.5332 51.8154 28.2703L51.4195 27.2411C51.3186 26.9783 51.1689 26.8031 50.9692 26.7143C50.7696 26.6256 50.5389 26.6323 50.2761 26.7332L49.5773 27.0016L50.6088 29.6822Z\",\n    fill: \"#2A3138\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.1512 23.3135L61.7139 22.7146L61.8913 24.0643L60.3253 24.2695L61.3889 32.3679L59.9582 32.5553L58.8946 24.4569L57.3286 24.6621L57.1512 23.3124V23.3135Z\",\n    fill: \"#2A3138\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.9464 22.6895L68.3871 22.7793L67.796 32.2906L66.3553 32.2008L66.9464 22.6895Z\",\n    fill: \"#2A3138\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.03 23.5779L77.9284 24.5971L77.5846 25.9147L75.0825 25.2603L74.3772 27.9609L76.3524 28.4777L76.0086 29.7953L74.0333 29.2785L73.0174 33.1635L71.6211 32.7987L74.0311 23.579L74.03 23.5779Z\",\n    fill: \"#2A3138\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M82.7994 26.5488L84.0981 27.1766L79.9513 35.7563L78.6526 35.1286L82.7994 26.5488Z\",\n    fill: \"#2A3138\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.0335 30.0593L92.3063 32.5259L91.4867 33.6128L89.3662 32.0157L87.7692 34.1363L89.4538 35.4061L88.6342 36.493L86.9495 35.2231L85.2704 37.4524L87.391 39.0494L86.5714 40.1363L83.2985 37.6708L89.0335 30.0604V30.0593Z\",\n    fill: \"#2A3138\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M96.381 36.4343L97.8173 38.1789C98.2553 38.7112 98.445 39.2669 98.3862 39.8447C98.3274 40.4225 98.0313 40.9305 97.499 41.3686L93.6527 44.536C93.1204 44.9741 92.5647 45.1671 91.9869 45.115C91.408 45.0629 90.9 44.7701 90.4619 44.2377L89.0257 42.4932L96.3821 36.4354L96.381 36.4343ZM91.469 43.3183C91.6475 43.5357 91.8461 43.6543 92.0634 43.6754C92.2808 43.6965 92.4982 43.6177 92.7145 43.4392L96.6028 40.2373C96.8202 40.0588 96.9389 39.8602 96.96 39.6429C96.981 39.4255 96.9023 39.2081 96.7237 38.9918L96.2479 38.414L90.9932 42.7416L91.469 43.3194V43.3183Z\",\n    fill: \"#2A3138\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.1817 93.7327C35.1706 93.1426 35.398 92.6058 35.8638 92.1212L39.527 88.316C39.9928 87.8324 40.5207 87.584 41.1108 87.5729C41.7008 87.5618 42.2376 87.7892 42.7222 88.255C43.2058 88.7208 43.4531 89.2487 43.4653 89.8387C43.4764 90.4287 43.249 90.9666 42.7832 91.4502L42.0091 92.2543L40.9888 91.2727L41.7629 90.4687C41.9514 90.2724 42.0468 90.0616 42.049 89.8376C42.0512 89.6125 41.9636 89.4151 41.7873 89.2454C41.6109 89.0757 41.4102 88.9958 41.1862 89.0069C40.9621 89.018 40.7547 89.1212 40.5662 89.3175L36.903 93.1227C36.7144 93.319 36.619 93.5297 36.6168 93.7537C36.6146 93.9789 36.7022 94.1763 36.8786 94.346C37.0549 94.5156 37.2556 94.5955 37.4797 94.5844C37.7037 94.5733 37.9111 94.4702 38.0996 94.2739L39.0435 93.2935L40.0638 94.275L39.12 95.2554C38.6542 95.7389 38.1263 95.9874 37.5362 95.9985C36.9462 96.0096 36.4083 95.7822 35.9248 95.3164C35.4412 94.8506 35.1928 94.3227 35.1817 93.7327Z\",\n    fill: \"#2A3138\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.7544 99.9293C42.598 99.3504 42.6934 98.7626 43.0416 98.1659L45.6601 93.673C46.0073 93.0775 46.4709 92.7037 47.052 92.554C47.6332 92.4043 48.221 92.503 48.8176 92.8501C49.4132 93.1973 49.7892 93.6608 49.9456 94.2398C50.1019 94.8187 50.0054 95.4065 49.6583 96.0032L47.0398 100.496C46.6927 101.092 46.228 101.465 45.6479 101.615C45.0668 101.765 44.4779 101.666 43.8823 101.319C43.2867 100.972 42.9108 100.508 42.7544 99.9293ZM45.2442 100.253C45.4594 100.19 45.6435 100.029 45.7932 99.7696L48.4117 95.2768C48.5626 95.0183 48.6125 94.7788 48.5614 94.5603C48.5104 94.3418 48.3674 94.1633 48.1322 94.0268C47.8971 93.8904 47.672 93.8527 47.4557 93.9159C47.2405 93.9792 47.0575 94.14 46.9067 94.3995L44.2882 98.8923C44.1374 99.1507 44.0875 99.3903 44.1385 99.6088C44.1895 99.8273 44.3326 100.006 44.5677 100.142C44.8028 100.279 45.028 100.316 45.2442 100.253Z\",\n    fill: \"#2A3138\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.0181 97.1297L57.6236 106.354L56.2273 105.991L57.8699 99.6661L54.9231 105.652L53.9482 105.399L54.2854 98.7356L52.6428 105.061L51.272 104.705L53.6665 95.4805L55.6428 95.994L55.3257 102.198L58.014 96.6095L60.017 97.1297H60.0181Z\",\n    fill: \"#2A3138\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.3908 97.3703L65.6499 97.3337C66.3398 97.3226 66.8921 97.52 67.3069 97.9259C67.7217 98.3319 67.9346 98.8797 67.9457 99.5696L67.9635 100.685C67.9745 101.375 67.7793 101.93 67.3779 102.349C66.9764 102.768 66.4307 102.983 65.7409 102.994L64.9246 103.008L64.9878 106.874L63.5449 106.897L63.3908 97.3692V97.3703ZM65.6522 101.636C65.9339 101.631 66.1501 101.55 66.3021 101.394C66.454 101.238 66.5272 101.018 66.5228 100.737L66.5039 99.5674C66.4995 99.2857 66.4185 99.0694 66.2621 98.9174C66.1058 98.7655 65.8862 98.6923 65.6056 98.6967L64.857 98.7089L64.9047 101.649L65.6533 101.637L65.6522 101.636Z\",\n    fill: \"#2A3138\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.9816 103.505L73.4722 103.864L73.6563 105.989L72.2522 106.323L71.5823 96.6872L73.4633 96.2402L77.2053 105.145L75.7746 105.485L74.9816 103.505ZM74.4748 102.198L72.982 98.4528L73.3358 102.469L74.4748 102.198Z\",\n    fill: \"#2A3138\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.7687 94.8231L79.1817 94.0867L83.7676 98.9111L80.8109 93.2371L82.0663 92.5828L86.4704 101.034L85.1185 101.738L80.6101 97.2098L83.4283 102.619L82.1728 103.273L77.7687 94.822V94.8231Z\",\n    fill: \"#2A3138\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.449 87.4287L90.6827 92.8554L93.3311 95.8376L92.252 96.7959L89.6035 93.8136L84.4785 90.9544L85.6286 89.933L88.8771 91.9093L87.3189 88.4324L88.449 87.4287Z\",\n    fill: \"#2A3138\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0574 61.6504L26.8992 64.2423H29.6242L27.4193 65.8438L28.2611 68.4357L26.0574 66.8331L23.8526 68.4357L24.6944 65.8438L22.4895 64.2423H25.2145L26.0574 61.6504Z\",\n    fill: \"#2A3138\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.1646 49.0784L29.0064 51.6703H31.7314L29.5266 53.2717L30.3683 55.8625L28.1646 54.261L25.9598 55.8625L26.8016 53.2717L24.5968 51.6703H27.3217L28.1646 49.0784Z\",\n    fill: \"#2A3138\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M102.028 49.0784L102.87 51.6703H105.595L103.39 53.2717L104.232 55.8625L102.028 54.261L99.8236 55.8625L100.665 53.2717L98.4605 51.6703H101.185L102.028 49.0784Z\",\n    fill: \"#2A3138\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.05 76.4011L30.8918 78.993H33.6168L31.412 80.5945L32.2537 83.1864L30.05 81.5838L27.8452 83.1864L28.687 80.5945L26.4822 78.993H29.2071L30.05 76.4011Z\",\n    fill: \"#2A3138\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.186 76.5125L101.028 79.1043H103.753L101.548 80.7058L102.391 83.2977L100.186 81.6951L97.9814 83.2977L98.8243 80.7058L96.6195 79.1043H99.3445L100.186 76.5125Z\",\n    fill: \"#2A3138\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.299 62.3162L104.141 64.908H106.866L104.661 66.5095L105.504 69.1014L103.299 67.4988L101.095 69.1014L101.937 66.5095L99.7326 64.908H102.458L103.299 62.3162Z\",\n    fill: \"#2A3138\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M65.0011 90.3337C78.992 90.3337 90.3344 78.9913 90.3344 65.0004C90.3344 51.0084 78.9931 39.666 65.0011 39.666C51.0092 39.666 39.6667 51.0095 39.6667 65.0004C39.6667 78.9913 51.0103 90.3337 65.0011 90.3337ZM73.6751 72.1692C74.9849 72.747 76.348 73.0287 77.7864 73.0831C78.0477 73.0482 78.3098 73.0177 78.5719 72.9872L78.5723 72.9872L78.5727 72.9872L78.573 72.9871L78.5734 72.9871L78.5735 72.987C79.1444 72.9207 79.7153 72.8543 80.2774 72.7426C83.293 72.1448 85.1728 70.377 85.7884 67.3204C86.0911 65.8209 86.0645 64.3348 85.7917 62.8342C85.3791 60.5639 84.178 58.9214 82.0475 58.002C79.2482 56.7942 76.4356 56.7987 73.6119 57.941C71.7565 58.6918 70.5653 60.0704 70.0219 61.947C69.4696 63.8501 69.4019 65.7998 69.8966 67.7463C70.43 69.8446 71.701 71.2986 73.6751 72.1692ZM75.2374 65.4865V65.4865V65.4865V65.4864V65.4864C75.2289 65.2606 75.2203 65.0319 75.2079 64.7995C75.2283 64.5778 75.2462 64.3523 75.2643 64.1244L75.2643 64.124L75.2644 64.1238L75.2644 64.1236V64.1236C75.3052 63.6093 75.3471 63.083 75.4208 62.5614C75.5295 61.795 75.9831 61.2693 76.7484 61.0974C77.2375 60.9876 77.7543 60.8933 78.2478 60.9288C79.4201 61.0142 80.1399 61.5577 80.2297 62.7067C80.3573 64.3326 80.3495 65.9839 80.2264 67.6109C80.1454 68.6912 79.0308 69.2956 77.7166 69.2113C76.1328 69.1093 75.514 68.527 75.3254 66.8901C75.2727 66.4292 75.2553 65.9642 75.2374 65.4865ZM58.034 72.624C58.0561 72.3023 58.0738 72.0313 58.0992 71.6396C58.2144 71.6957 58.3159 71.7453 58.4092 71.791L58.4106 71.7917L58.4125 71.7926L58.4138 71.7932C58.5545 71.862 58.6767 71.9218 58.7993 71.9808C61.1383 73.1065 63.5516 73.3904 66.0292 72.5297C68.3882 71.7101 69.6781 69.248 68.9417 66.9223C68.3505 65.0558 66.9664 63.9655 65.1298 63.4188C64.3414 63.1842 63.5507 62.9568 62.7599 62.7293C61.8419 62.4653 60.9238 62.2012 60.0092 61.926C59.6455 61.8173 59.1375 61.6354 59.2839 61.174C59.3715 60.8979 59.8473 60.584 60.1634 60.5685C62.1364 60.4687 63.9364 60.9067 65.2906 62.496C65.3849 62.6058 65.5291 62.7422 65.6522 62.7445C66.3953 62.7597 67.139 62.7581 67.8884 62.7565H67.8884H67.8885H67.8888C68.1201 62.756 68.352 62.7556 68.5845 62.7556V57.5585H65.4148L65.3608 58.0446L65.3206 58.4058C65.2638 58.3814 65.2136 58.3614 65.1682 58.3432L65.1678 58.3431L65.1678 58.3431L65.1677 58.3431L65.1676 58.343C65.0811 58.3085 65.0122 58.2809 64.949 58.2439C62.9926 57.0871 60.8754 56.9307 58.6994 57.2978C57.3087 57.533 56.0421 58.1075 55.2835 59.3585C54.0524 61.3892 54.129 64.4058 57.1334 65.9463C58.0257 66.4039 59.0034 66.696 59.98 66.9877L59.9802 66.9878L59.9802 66.9878L59.9803 66.9878C60.3765 67.1061 60.7725 67.2244 61.1627 67.3537C61.5207 67.4728 61.8816 67.5829 62.2425 67.6929L62.2426 67.693C62.7792 67.8567 63.3156 68.0203 63.8422 68.2133C64.0005 68.2711 64.1228 68.4287 64.2448 68.5861C64.3006 68.658 64.3564 68.7299 64.4156 68.7922C64.3546 68.8418 64.2959 68.8976 64.2372 68.9533C64.1057 69.0782 63.9742 69.2031 63.8178 69.2591C63.4928 69.3756 63.1324 69.4199 62.7841 69.4355C60.7956 69.5231 59.0665 69.0107 57.8798 67.2683C57.8155 67.173 57.6747 67.0754 57.5682 67.0731C56.8511 67.0612 56.134 67.0624 55.4029 67.0636C55.1819 67.0639 54.9596 67.0643 54.7356 67.0643V72.624H58.034ZM51.5182 61.025H53.7009L53.702 61.0239V57.3285H43.9954V61.0173H46.1637V69.0159H43.9999V72.6325H53.7408C53.7408 72.4261 53.7416 72.2236 53.7424 72.024V72.0238V72.0236V72.0235C53.7442 71.5584 53.746 71.1087 53.7375 70.6595C53.735 70.5136 53.7456 70.3533 53.7563 70.1918C53.784 69.7739 53.8123 69.3479 53.6155 69.1423C53.4317 68.9492 53.0269 68.967 52.6224 68.9847C52.4459 68.9924 52.2696 69.0001 52.1116 68.9904H52.1116C52.0916 68.9892 52.0716 68.9881 52.0528 68.9904C51.587 69.0536 51.4561 68.8473 51.4606 68.3904C51.4749 66.8553 51.4738 65.3203 51.4727 63.7853C51.4722 63.0689 51.4717 62.3525 51.4728 61.6361C51.4728 61.5115 51.4849 61.3864 51.4982 61.2487L51.4982 61.2487C51.5051 61.178 51.5122 61.104 51.5182 61.025ZM79.0574 74.576C75.3676 79.8229 70.3324 82.5756 63.8644 82.3749C57.8588 82.1886 53.224 79.3893 49.7482 74.4828C50.1985 74.2832 50.4003 74.4506 50.6498 74.7312C51.3032 75.465 51.9762 76.1818 52.6489 76.8985C52.9514 77.2207 53.2539 77.5429 53.5545 77.8666C53.8096 78.1416 54.0702 78.1538 54.3852 77.9508C54.688 77.7556 55.0003 77.5748 55.3223 77.3885L55.3229 77.3881C55.4654 77.3056 55.6097 77.2221 55.756 77.1357C55.4111 76.6614 55.0799 76.2062 54.7555 75.7603L54.7526 75.7563C54.4385 75.3246 54.1307 74.9016 53.8229 74.4784C53.8482 74.4447 53.8736 74.4114 53.899 74.378L53.8993 74.3775L53.9003 74.3762C53.9255 74.3431 53.9507 74.3099 53.9759 74.2765C54.0469 74.3191 54.1232 74.3572 54.1995 74.3953L54.1996 74.3954C54.368 74.4795 54.5366 74.5637 54.648 74.6957C55.0457 75.1659 55.4144 75.6593 55.7834 76.153L55.7842 76.154C55.8719 76.2713 55.9596 76.3887 56.0477 76.5057C56.2362 76.7564 56.4225 76.8174 56.7419 76.6876C57.3548 76.4382 57.9783 76.2151 58.6203 75.9853C58.8833 75.8911 59.1494 75.7959 59.4192 75.6972C59.2815 75.3804 59.1546 75.0877 59.0299 74.7998L58.8713 74.434C59.3948 74.1889 59.5789 74.5261 59.6909 74.8566C59.895 75.4643 60.2421 75.5564 60.8499 75.4322C61.5809 75.2829 62.3304 75.2192 63.0785 75.1557C63.2474 75.1413 63.4163 75.127 63.5849 75.1116C63.9963 75.0739 64.2725 74.9641 64.1682 74.4784C64.7328 74.2111 64.7649 74.5726 64.766 74.983L65.391 75.0631C66.2331 75.1711 67.0685 75.2782 67.9047 75.3867C67.926 75.3894 67.9477 75.3916 67.9695 75.3939C68.0461 75.4019 68.1239 75.4101 68.193 75.4377C68.7221 75.6573 69.0404 75.4654 69.2223 74.9464C69.3409 74.607 69.4829 74.2643 70.0385 74.454C69.8877 74.8554 69.7369 75.2591 69.5749 75.6928C69.7963 75.7742 70.015 75.8554 70.2317 75.9359L70.2321 75.9361C70.9361 76.1975 71.62 76.4514 72.311 76.6821C72.4385 76.7242 72.687 76.6233 72.7824 76.5079C73.0079 76.2377 73.2223 75.9579 73.4367 75.6782L73.4368 75.678L73.4369 75.6779C73.6746 75.3677 73.9123 75.0574 74.1654 74.7601C74.2831 74.6218 74.4512 74.5268 74.6193 74.4318L74.6193 74.4318C74.6966 74.3881 74.774 74.3444 74.8463 74.2965C74.9073 74.3619 74.9683 74.4273 75.0293 74.4917C74.4536 75.2945 73.8779 76.0964 73.2437 76.9796L73.1483 77.1124C73.2907 77.1917 73.4324 77.2721 73.574 77.3524C74.0026 77.5957 74.4302 77.8383 74.8729 78.0484C74.9816 78.1006 75.2456 77.9597 75.3632 77.8366C75.8271 77.3488 76.2851 76.8551 76.7432 76.3614C77.2411 75.8247 77.739 75.2881 78.2445 74.759C78.3696 74.6278 78.5355 74.5361 78.7013 74.4444C78.7782 74.4019 78.855 74.3595 78.9277 74.3131C78.9709 74.4007 79.0142 74.4872 79.0586 74.5748L79.0574 74.576ZM64.7771 75.6207C64.7771 75.9528 64.7759 76.272 64.7746 76.5818C64.7714 77.3952 64.7684 78.1438 64.7893 78.8924C64.796 79.1209 64.969 79.5424 65.0544 79.539C65.2106 79.534 65.3741 79.5854 65.5378 79.6368C65.882 79.7449 66.2273 79.8533 66.5084 79.4392C67.0974 78.5709 67.6674 77.6896 68.2375 76.8083L68.4692 76.4503C68.4977 76.4057 68.5053 76.3481 68.5174 76.2559C68.5246 76.2013 68.5334 76.1344 68.549 76.051C67.7504 75.9602 66.9714 75.8713 66.1757 75.7804L64.7771 75.6207ZM60.4551 76.0344L60.4354 76.0885C60.4109 76.1562 60.3862 76.2243 60.3608 76.2917C60.5392 76.5662 60.7155 76.8423 60.8918 77.1184L60.8923 77.1192C61.2812 77.7283 61.6701 78.3373 62.0821 78.9301C62.7109 79.8363 62.7653 79.8462 63.8111 79.5601C63.9575 79.5202 64.1505 79.2928 64.1538 79.1464C64.1838 78.1305 64.1804 77.1135 64.156 76.0976C64.1527 75.9634 63.9575 75.7116 63.8655 75.7183C62.9653 75.784 62.0672 75.8733 61.169 75.9626C60.9307 75.9863 60.6923 76.01 60.454 76.0333L60.4551 76.0344ZM61.9357 79.8839L61.5405 79.2442C60.9837 78.3427 60.4284 77.4435 59.8651 76.5501C59.8041 76.4536 59.6377 76.3294 59.5634 76.3527C58.8542 76.5763 58.1493 76.8164 57.3924 77.0744L57.3921 77.0744C57.2104 77.1363 57.0258 77.1993 56.8373 77.2632C56.9199 77.3591 56.9845 77.4402 57.0398 77.5096C57.136 77.6303 57.2038 77.7152 57.2876 77.78C57.6832 78.0878 58.0814 78.392 58.4797 78.6962C58.9971 79.0914 59.5145 79.4865 60.0259 79.8895C60.6569 80.3875 61.2736 80.4673 61.9368 79.8839H61.9357ZM67.0019 79.9083C67.5675 80.3132 68.081 80.4363 68.6655 79.9815C69.2099 79.5574 69.7732 79.1567 70.3364 78.7561L70.3365 78.756C70.6143 78.5584 70.8921 78.3608 71.1676 78.1605C71.3812 78.0048 71.5911 77.845 71.8014 77.6849C71.8968 77.6123 71.9922 77.5396 72.0881 77.4673C72.067 77.4185 72.0457 77.3697 72.0243 77.3209C72.0116 77.2918 71.9988 77.2626 71.9861 77.2335C71.9776 77.2138 71.969 77.1942 71.9605 77.1745C71.7679 77.1142 71.5755 77.0533 71.3831 76.9925L71.3828 76.9924C70.7477 76.7917 70.1129 76.5911 69.4729 76.4081C69.3698 76.3782 69.1646 76.4714 69.1014 76.5689C68.5425 77.4394 67.9955 78.3168 67.4393 79.209L67.439 79.2095C67.2944 79.4414 67.1492 79.6743 67.003 79.9083H67.0019ZM60.8244 81.2936C61.8403 82.0067 67.135 82.0011 68.142 81.2913C66.637 79.7642 62.2496 79.7653 60.8244 81.2936ZM68.7198 80.7557L68.7232 80.9509C68.8069 80.9608 68.8927 80.9791 68.9784 80.9974L68.9785 80.9974L68.9785 80.9974C69.162 81.0366 69.3452 81.0757 69.5062 81.0318C71.121 80.5982 72.5883 79.8385 73.9779 78.9224C74.0671 78.8639 74.1399 78.7799 74.2271 78.6792L74.2272 78.6792C74.2723 78.6271 74.3212 78.5706 74.3783 78.5109C74.2363 78.4291 74.0994 78.3528 73.9668 78.279L73.9663 78.2787C73.6839 78.1215 73.4214 77.9752 73.1716 77.81C72.8178 77.576 72.5705 77.6481 72.25 77.912C71.4894 78.5373 70.7128 79.1423 69.9361 79.7473L69.936 79.7474C69.5927 80.0148 69.2493 80.2823 68.9073 80.5516C68.8579 80.5903 68.8174 80.6395 68.7768 80.6887C68.7581 80.7113 68.7394 80.734 68.7198 80.7557ZM54.5892 78.5109C54.6215 78.5692 54.6424 78.6113 54.6578 78.6422C54.6811 78.6889 54.6917 78.7101 54.709 78.7228C56.1974 79.8318 57.8521 80.6037 59.6377 81.0873C59.7538 81.1187 59.8978 81.0485 60.0463 80.976C60.1177 80.9412 60.1901 80.9058 60.261 80.881C60.2275 80.8161 60.2058 80.7702 60.1902 80.737L60.1902 80.737C60.1671 80.688 60.1571 80.6669 60.1412 80.6536C59.9294 80.4879 59.7177 80.3221 59.5059 80.1562C58.506 79.3731 57.5062 78.5899 56.4957 77.8211C56.3715 77.7268 56.1153 77.6858 55.98 77.749C55.6417 77.9062 55.3177 78.0933 54.9849 78.2854L54.9848 78.2854C54.8551 78.3603 54.7241 78.436 54.5904 78.5109H54.5892ZM58.7608 55.5156C58.7607 55.5159 58.7605 55.5162 58.7604 55.5165L58.7593 55.5154L58.7608 55.5156ZM59.0541 54.8064C58.9535 55.0497 58.8579 55.281 58.7608 55.5156L58.791 55.5201C59.3222 55.599 59.3678 55.6058 59.5157 55.1793C59.7408 54.5294 60.0791 54.3564 60.7789 54.5206C61.4801 54.6849 62.2061 54.7459 62.9303 54.8067C63.1247 54.8231 63.3191 54.8394 63.5128 54.8577C63.5345 54.8598 63.5561 54.8617 63.5773 54.8635C63.8649 54.8886 64.0998 54.909 64.0895 55.318C64.0884 55.4 64.2891 55.5553 64.3923 55.552C64.4976 55.5487 64.6263 55.4078 64.6928 55.2958C64.7374 55.2202 64.7471 55.124 64.7556 55.0401C64.759 55.0071 64.7621 54.9759 64.7671 54.9487C65.093 54.907 65.4161 54.8719 65.7363 54.8371C66.4896 54.7554 67.2269 54.6753 67.9468 54.515C68.6045 54.3686 68.935 54.5294 69.1313 55.125C69.2522 55.4921 69.4662 55.6928 69.9065 55.4899C69.7643 55.1097 69.6222 54.7286 69.4746 54.3331L69.4407 54.2422C69.6772 54.1539 69.9102 54.066 70.1409 53.979C70.8317 53.7183 71.5011 53.4657 72.1779 53.2363C72.3099 53.1919 72.565 53.2873 72.6626 53.4026C73.1672 54.0004 73.6507 54.6159 74.1154 55.2448C74.3295 55.5354 74.5413 55.6851 74.965 55.4577L74.6732 55.0511C74.1426 54.3115 73.6173 53.5795 73.0707 52.8181C73.2177 52.7311 73.3614 52.6486 73.5021 52.5679C73.822 52.3844 74.1256 52.2102 74.4138 52.013C74.7099 51.81 74.9395 51.8111 75.1846 52.0695C75.488 52.3893 75.7933 52.7074 76.0986 53.0256C76.7663 53.7215 77.4341 54.4174 78.0826 55.1305L78.0914 55.1402C78.3434 55.4163 78.5428 55.6348 79.0186 55.4156C75.3997 50.3727 70.5775 47.6122 64.3789 47.6166C58.1371 47.6211 53.2827 50.386 49.7936 55.5631C50.1141 55.4999 50.4114 55.3712 50.6199 55.1561C51.0876 54.675 51.5475 54.1866 52.0072 53.6984C52.4982 53.177 52.989 52.6559 53.489 52.1438C53.6177 52.0119 53.9315 51.8998 54.0713 51.9653C54.4669 52.1501 54.8431 52.3756 55.2277 52.6061C55.3714 52.6922 55.5164 52.779 55.6639 52.8647C55.3087 53.3651 54.9601 53.8558 54.6143 54.3424C54.3393 54.7295 54.0661 55.114 53.7929 55.4988C53.8218 55.5309 53.8506 55.5628 53.8795 55.5947C53.9083 55.6266 53.9371 55.6585 53.9659 55.6906C54.0379 55.6424 54.1145 55.5982 54.1911 55.5541C54.3576 55.4582 54.524 55.3623 54.6425 55.2248C54.8996 54.926 55.1408 54.6133 55.3821 54.3006C55.5831 54.04 55.7842 53.7794 55.9944 53.5268C56.1042 53.3949 56.3427 53.2252 56.4602 53.264C57.1776 53.4983 57.8859 53.7599 58.6075 54.0264C58.8285 54.1081 59.0508 54.1902 59.275 54.2721C59.1974 54.4597 59.1245 54.636 59.0541 54.8064ZM64.0529 53.6711C64.0529 53.8847 64.0529 54.1021 64.0529 54.3243C63.3729 54.2506 62.7141 54.1788 62.0498 54.1064C61.4637 54.0426 60.8732 53.9782 60.2599 53.9117C60.2969 53.8065 60.3239 53.7168 60.3474 53.6389C60.3893 53.4998 60.42 53.3981 60.4761 53.3128C61.0761 52.3989 61.6795 51.4873 62.3028 50.59C62.5168 50.2817 63.7213 50.2396 63.973 50.508C64.0207 50.559 64.0496 50.6488 64.0496 50.7209C64.0532 51.674 64.0531 52.6262 64.0529 53.6711ZM68.5102 53.7209C67.2071 54.1379 66.0115 54.2577 64.7028 54.2322C64.7028 53.9918 64.7027 53.7533 64.7026 53.5164C64.7023 52.5765 64.7019 51.6615 64.7072 50.7464C64.7083 50.6588 64.7449 50.5423 64.8082 50.4891C65.1464 50.2019 66.1801 50.3205 66.4352 50.6876C66.9134 51.3757 67.385 52.0687 67.8789 52.7943C68.0848 53.0968 68.2945 53.405 68.5102 53.7209ZM67.3391 50.8654C67.1726 50.6013 67.0052 50.3358 66.8366 50.0688C67.4389 49.6074 68.0089 49.5253 68.6167 49.9967C69.1688 50.4258 69.7267 50.8473 70.2846 51.2689C70.7073 51.5883 71.13 51.9076 71.5502 52.2303C71.6241 52.2867 71.6829 52.3623 71.7676 52.4713C71.8163 52.534 71.8736 52.6076 71.9472 52.695C71.729 52.7678 71.5158 52.8393 71.3065 52.9094C70.6 53.1463 69.9373 53.3686 69.2699 53.5756C69.1867 53.6011 69.0115 53.4991 68.9527 53.4082C68.4125 52.5686 67.8801 51.7238 67.3391 50.8654ZM57.5329 52.9798C57.2788 52.8949 57.0175 52.8075 56.7464 52.715V52.7139C58.014 51.4573 59.2506 50.4503 60.6946 49.7482C60.8795 49.6584 61.1493 49.745 61.4485 49.841C61.5963 49.8884 61.7513 49.9382 61.9068 49.9701C61.8574 50.0587 61.8161 50.1343 61.7797 50.201C61.7058 50.3363 61.652 50.4347 61.5919 50.529C61.4065 50.8204 61.2198 51.1107 61.033 51.401C60.6297 52.0279 60.2266 52.6546 59.8384 53.2906C59.6687 53.5668 59.529 53.6843 59.1918 53.5568C58.6565 53.3554 58.1136 53.1739 57.5329 52.9798ZM68.081 48.566C65.5424 48.0303 63.1135 47.997 60.6181 48.5915C62.1131 50.2207 66.5549 50.2196 68.081 48.566ZM54.8581 51.683C54.7055 51.5995 54.5388 51.5083 54.353 51.403C54.5809 51.2601 54.7918 51.1207 54.9932 50.9876C55.4173 50.7074 55.7991 50.4551 56.2073 50.2573C57.19 49.7815 58.1992 49.3567 59.2207 48.973C59.4 48.9062 59.6203 48.9491 59.8408 48.9921C59.9422 49.0118 60.0437 49.0316 60.1412 49.0407C60.144 49.0761 60.1465 49.1116 60.149 49.147C60.1515 49.1826 60.154 49.2181 60.1567 49.2536C60.1204 49.2836 60.0841 49.3141 60.0478 49.3446C59.97 49.4099 59.8919 49.4755 59.8118 49.5375C59.5011 49.7772 59.1891 50.0153 58.8771 50.2535C58.1032 50.8444 57.329 51.4354 56.5733 52.0496C56.2506 52.3124 56.011 52.3923 55.6539 52.1494C55.418 51.9891 55.1667 51.8517 54.8581 51.683ZM68.622 49.2408C68.5986 49.2027 68.5677 49.1525 68.5224 49.085V49.0839C68.6174 49.0608 68.7092 49.0287 68.7969 48.9981C68.9744 48.9361 69.1348 48.8801 69.2699 48.9164C71.0222 49.3889 72.6204 50.193 74.0877 51.2599C74.104 51.2714 74.1124 51.2938 74.1279 51.3351C74.1377 51.3613 74.1504 51.395 74.1698 51.4385C74.0459 51.5103 73.9221 51.5839 73.7979 51.6577C73.4639 51.8562 73.1268 52.0565 72.7768 52.2303C72.6626 52.2869 72.4308 52.2259 72.3143 52.1383C71.2264 51.3124 70.1482 50.4739 69.0695 49.635C68.9474 49.54 68.8253 49.445 68.7032 49.3501C68.6769 49.3299 68.6584 49.2998 68.622 49.2408Z\",\n    fill: \"#2A3138\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAboutUs3);\nexport default __webpack_public_path__ + \"static/media/about-us3.146bf4eb78ab60cf18f2bfe670512fe6.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAboutUs4(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 131,\n    height: 130,\n    viewBox: \"0 0 131 130\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M101.745 27.6004C102.398 29.9443 101.777 31.6914 101.331 32.5584C102.134 33.4671 102.883 34.4219 103.579 35.4221C103.441 34.8764 103.325 34.3126 103.249 33.7475C102.825 30.4847 104.177 28.1541 104.203 28.1562C104.217 28.1193 107.128 31.5846 107.316 35.0298V35.0288C107.45 37.2139 106.619 38.7232 106.01 39.5279C106.564 40.6395 107.065 41.7951 107.512 42.9941C107.475 42.388 107.47 41.7634 107.515 41.1463C107.761 37.9541 109.568 35.9568 109.591 35.962C109.609 35.9272 111.732 39.7205 111.246 43.0645H111.247C110.916 45.4194 109.587 46.7741 108.853 47.3641C109.252 48.9851 109.561 50.6636 109.782 52.3971C109.821 51.3373 109.95 50.1307 110.263 48.988C111.109 45.9519 113.28 44.3437 113.301 44.3532C113.322 44.3215 114.681 48.3394 113.588 51.4936H113.587C112.694 54.1081 110.696 55.142 110.074 55.4178C110.219 57.6017 110.233 59.8649 110.116 62.2031L110.12 62.2703L110.124 62.329C110.271 61.0866 110.633 58.9245 111.539 57.0659C112.92 54.2639 115.362 53.0892 115.38 53.1008C115.404 53.0723 116.019 57.2125 114.387 60.0978H114.388C112.976 62.6152 110.661 63.2092 110.134 63.3254C110.132 63.3473 110.13 63.3579 110.129 63.3563C110.127 63.3576 110.106 63.3522 110.067 63.3397L110.048 63.3438C109.95 64.7919 109.802 66.2679 109.604 67.7707C109.544 68.2293 109.476 68.6859 109.402 69.1404C109.812 67.9663 110.457 66.4542 111.393 65.1797C113.242 62.6825 115.865 61.9728 115.881 61.9875C115.91 61.9622 115.802 66.1214 113.697 68.6639V68.665C111.973 70.7606 109.745 71.0296 109.045 71.0695C108.718 72.6389 108.309 74.1806 107.821 75.689C108.368 74.8284 109.056 73.9043 109.871 73.1279C112.122 70.9987 114.841 70.7741 114.855 70.791C114.887 70.7699 114.077 74.8437 111.564 76.9802C109.695 78.5784 107.668 78.6171 106.785 78.5463C106.258 79.8579 105.668 81.14 105.018 82.3885C105.609 81.7903 106.285 81.1967 107.021 80.7081C109.611 79.0039 112.342 79.2707 112.351 79.2886C112.386 79.2728 110.896 83.1589 108.039 84.8293H108.04C106.032 86.0117 104.121 85.7889 103.188 85.5686C102.477 86.6899 101.715 87.7782 100.903 88.8302C101.518 88.4154 102.19 88.0254 102.891 87.7209C105.759 86.4892 108.417 87.2432 108.424 87.2622C108.462 87.2516 106.314 90.8456 103.175 92.0003L103.174 92.0014C101.026 92.7982 99.2042 92.2878 98.2886 91.9051C97.3932 92.8631 96.4513 93.7827 95.4649 94.6608C96.1204 94.3792 96.8189 94.1316 97.5273 93.9639C100.612 93.2468 103.116 94.4701 103.121 94.4901C103.162 94.4859 100.376 97.6844 97.0164 98.2812C94.7286 98.6936 93.004 97.8724 92.1532 97.3279C91.0381 98.1386 89.8903 98.8904 88.7121 99.5821C89.4443 99.4113 90.2142 99.2829 90.9755 99.2399C94.2169 99.0701 96.4885 100.734 96.4917 100.756C96.5362 100.759 93.1326 103.458 89.6134 103.461V103.46C87.1583 103.468 85.5537 102.287 84.8215 101.598C83.3715 102.254 81.8834 102.826 80.3606 103.313L80.3236 103.324L80.3011 103.332C81.2672 103.251 82.3009 103.234 83.2873 103.349C86.6274 103.753 88.5894 105.817 88.5894 105.839C88.6371 105.85 84.6377 107.946 81.0168 107.326L81.0178 107.327C78.2274 106.856 76.8003 105.116 76.3059 104.382C74.1773 104.827 72.0277 105.095 69.8673 105.185L70.0924 105.35L65.3129 108.846L60.5323 105.35L60.7798 105.169C58.7382 105.065 56.7067 104.802 54.6941 104.382C54.1997 105.116 52.7725 106.856 49.9821 107.327L49.9832 107.326C46.3622 107.946 42.3628 105.85 42.4105 105.839C42.4105 105.817 44.3726 103.753 47.7126 103.349C48.699 103.234 49.7327 103.251 50.6989 103.332L50.6393 103.313C49.1166 102.826 47.6284 102.254 46.1785 101.598C45.4462 102.287 43.8416 103.468 41.3866 103.46V103.461C37.8674 103.458 34.4637 100.759 34.5082 100.756C34.5114 100.734 36.783 99.0701 40.0245 99.2399C40.7857 99.2829 41.5556 99.4113 42.2879 99.5821C41.1096 98.8904 39.9619 98.1386 38.8468 97.3279C37.996 97.8724 36.2714 98.6936 33.9835 98.2812C30.6244 97.6844 27.8377 94.4859 27.879 94.4901C27.8843 94.4701 30.388 93.2468 33.4726 93.9639C34.181 94.1316 34.8795 94.3792 35.5351 94.6608C34.5486 93.7828 33.6068 92.8631 32.7113 91.9051C31.7958 92.2878 29.9743 92.7982 27.826 92.0014L27.8249 92.0003C24.6863 90.8456 22.5377 87.2516 22.5758 87.2622C22.5832 87.2432 25.2407 86.4892 28.109 87.7209C28.8102 88.0254 29.4822 88.4154 30.0971 88.8302C29.2849 87.7782 28.5225 86.6899 27.8119 85.5686C26.8789 85.7889 24.968 86.0117 22.9595 84.8293H22.9606C20.1039 83.1589 18.6135 79.2728 18.6485 79.2886C18.6581 79.2707 21.3886 79.0039 23.9793 80.7081C24.7154 81.1967 25.3913 81.7903 25.9815 82.3885C25.3318 81.14 24.7421 79.8579 24.2145 78.5463C23.3322 78.6171 21.3051 78.5784 19.4361 76.9802C16.9228 74.8437 16.113 70.7699 16.1448 70.791C16.1586 70.7741 18.8775 70.9987 21.1289 73.1279C21.9435 73.9043 22.6319 74.8284 23.1789 75.6891C22.6906 74.1806 22.2816 72.6389 21.955 71.0695C21.2551 71.0296 19.0264 70.7607 17.3034 68.665C15.1982 66.1225 15.0901 61.9633 15.1187 61.9886C15.1346 61.9738 17.7581 62.6835 19.6068 65.1797C20.5425 66.4542 21.1877 67.9662 21.5975 69.1404C21.5235 68.6859 21.4563 68.2293 21.396 67.7707C21.1984 66.2679 21.0504 64.7919 20.952 63.3438L20.9332 63.3398C20.8943 63.3523 20.8726 63.3576 20.8713 63.3563C20.8699 63.3579 20.868 63.3473 20.866 63.3254C20.3385 63.2092 18.0238 62.6152 16.6123 60.0978H16.6133C14.9809 57.2125 15.5957 53.0723 15.6201 53.1008C15.6381 53.0892 18.0804 54.2639 19.4605 57.0659C20.3667 58.9245 20.7293 61.0866 20.876 62.329C20.8785 62.288 20.8813 62.246 20.8844 62.2031C20.7665 59.8649 20.7805 57.6017 20.926 55.4178C20.3043 55.142 18.306 54.1081 17.4126 51.4936H17.4115C16.3186 48.3394 17.6776 44.3215 17.6988 44.3532C17.72 44.3437 19.8908 45.9519 20.7367 48.988C21.0503 50.1307 21.1785 51.3373 21.2175 52.3971C21.4386 50.6636 21.7484 48.9851 22.1468 47.3641C21.4129 46.7741 20.0835 45.4194 19.753 43.0645H19.7541C19.2676 39.7205 21.3907 35.9272 21.4088 35.962C21.4321 35.9568 23.2394 37.9541 23.4853 41.1463C23.53 41.7634 23.5249 42.388 23.4878 42.9941C23.9345 41.7951 24.4354 40.6395 24.99 39.5279C24.3812 38.7232 23.5499 37.2139 23.6835 35.0288V35.0298C23.8722 31.5846 26.783 28.1193 26.7967 28.1562C26.8232 28.1541 28.1747 30.4847 27.7507 33.7475C27.6746 34.3126 27.5593 34.8764 27.4207 35.4221C28.1168 34.4219 28.8662 33.4671 29.6685 32.5584C29.2231 31.6914 28.6023 29.9443 29.2549 27.6004C30.1887 24.1499 33.9072 21.116 33.9168 21.1539C33.9464 21.155 34.7467 23.7534 33.585 26.992C33.1826 28.0957 32.6378 29.1655 32.0958 30.0959L31.6986 31.3376C32.7071 30.494 34.0748 29.5924 35.5937 29.2392C38.526 28.5511 40.5086 30.0639 40.7492 30.2475C40.7635 30.2584 40.7717 30.2646 40.7735 30.2654C40.767 30.2674 40.7236 30.3014 40.6474 30.3611L40.6473 30.3611C40.0857 30.801 37.748 32.6316 35.2587 33.351H35.2598C32.718 34.0765 30.5195 33.3385 30.0449 33.1468C30.0369 33.1579 30.0322 33.1648 30.0311 33.1675C30.0302 33.1641 30.0223 33.1521 30.0087 33.1319L30.0063 33.1309C28.7647 34.5568 27.6541 36.0972 26.6767 37.7493C26.4558 38.3297 26.2372 38.8385 26.0549 39.2407C26.7947 38.1442 28.2434 36.3623 30.1792 35.5581C32.8472 34.4422 35.0704 35.5465 35.3663 35.6934C35.3859 35.7032 35.3971 35.7087 35.3993 35.7091C35.3937 35.7122 35.3617 35.7486 35.3055 35.8127C34.8738 36.3045 33.0143 38.4228 30.7293 39.5222V39.5212C28.407 40.6292 26.1046 40.2921 25.6044 40.1883C25.5986 40.2007 25.5953 40.2083 25.5948 40.211C25.5932 40.208 25.5827 40.1976 25.5644 40.1797C25.5258 40.171 25.5052 40.165 25.5046 40.1634C25.5023 40.1642 25.5062 40.1534 25.5161 40.1322C25.4937 40.11 25.4669 40.083 25.4364 40.0514C24.8306 41.2903 24.292 42.5842 23.8213 43.9324C23.5448 44.7244 23.2923 45.5326 23.0639 46.3568C23.6268 45.1666 24.6579 43.4621 26.2265 42.4697C28.6039 40.9594 30.9885 41.6392 31.3182 41.7332C31.3408 41.7397 31.3541 41.7434 31.3565 41.7434C31.352 41.7472 31.3301 41.7843 31.2915 41.8495L31.2915 41.8496C30.9812 42.3751 29.5958 44.7212 27.5546 46.1744V46.1755C25.5756 47.574 23.3498 47.7008 22.717 47.6968C22.3436 49.2466 22.0519 50.8499 21.8421 52.5043C22.2509 51.5558 22.844 50.5553 23.6909 49.7894C25.7401 47.9279 28.2027 48.1666 28.5609 48.2014C28.5872 48.2039 28.6022 48.2054 28.6048 48.2048C28.6013 48.2091 28.588 48.2456 28.5646 48.3098C28.3672 48.8514 27.4516 51.3629 25.6922 53.1377V53.1366C24.246 54.5853 22.4508 55.1751 21.5628 55.3851C21.4741 56.6891 21.4328 58.0221 21.4392 59.3831C21.6862 58.6664 22.035 57.9486 22.526 57.3222C24.2178 55.1531 26.6892 54.9506 27.0551 54.9207L27.0707 54.9194L27.0777 54.9188L27.0844 54.9182L27.0931 54.9173L27.0977 54.9166L27.1007 54.9161C27.0982 54.9207 27.0919 54.957 27.0809 55.0207C26.9858 55.5716 26.5359 58.1771 25.0986 60.2264H25.0976C23.9936 61.791 22.4531 62.6782 21.5693 63.0836C21.6553 64.4146 21.7837 65.7698 21.9546 67.1484C22.0755 66.3845 22.2999 65.5993 22.6871 64.8823C23.9877 62.4603 26.3923 61.8208 26.7564 61.724C26.7847 61.7164 26.8007 61.7122 26.8029 61.7106C26.8015 61.7155 26.8016 61.7491 26.8018 61.8082C26.8034 62.345 26.8115 64.9859 25.7293 67.2677V67.2688C24.8401 69.13 23.3203 70.3181 22.5504 70.8237C22.8933 72.4943 23.3308 74.1332 23.8591 75.7335C23.7295 74.6669 23.7392 73.4316 24.1287 72.2821C25.0078 69.6662 27.2744 68.6078 27.6246 68.4443C27.6524 68.4313 27.6681 68.4239 27.6701 68.4219C27.6695 68.4269 27.6752 68.4596 27.6853 68.5171C27.7773 69.0432 28.2318 71.6395 27.544 74.0886H27.543C26.9202 76.2854 25.4047 77.8171 24.813 78.339C25.5738 80.2267 26.4653 82.0522 27.4806 83.8032C27.0037 82.6221 26.5476 80.9602 26.8052 79.3329C27.2312 76.588 29.2945 75.1364 29.6166 74.9099C29.6424 74.8917 29.6571 74.8814 29.6587 74.879C29.659 74.8841 29.6702 74.9156 29.69 74.9709C29.8701 75.4751 30.7576 77.9595 30.4961 80.5109C30.2361 82.9847 28.8145 84.878 28.4188 85.3447C29.6457 87.2673 31.0275 89.0907 32.5544 90.7972C31.7982 89.7438 30.706 87.8629 30.6721 85.8491C30.6147 83.0478 32.4085 81.2395 32.6905 80.9552C32.7134 80.9321 32.7263 80.9191 32.7275 80.9164C32.7287 80.9213 32.745 80.95 32.7737 81.0005C33.0376 81.4652 34.3492 83.7743 34.5453 86.3616H34.5443C34.732 88.9318 33.602 91.1144 33.3256 91.5798C33.3356 91.5896 33.3417 91.5951 33.3439 91.5962C33.3413 91.5968 33.3296 91.6034 33.309 91.6149L33.3068 91.6162C34.554 92.9384 35.8913 94.1854 37.3141 95.3485C37.653 95.6256 37.9954 95.8968 38.3412 96.1621C38.4139 96.2084 38.4835 96.2532 38.5499 96.2965C37.5937 95.3932 36.0943 93.6835 35.6848 91.6417C35.1164 88.8675 36.5708 86.7519 36.8041 86.4125C36.8234 86.3844 36.8343 86.3685 36.8351 86.3653C36.8373 86.3703 36.8594 86.3968 36.898 86.4432L36.8982 86.4434C37.2495 86.8654 38.9653 88.926 39.6471 91.4646V91.4656C40.3174 93.9957 39.6034 96.3744 39.4151 96.8862C39.4266 96.8938 39.4335 96.898 39.4357 96.8986C39.4354 96.8988 39.4351 96.899 39.4345 96.8993C39.4334 96.9001 39.4318 96.9014 39.4296 96.9031L39.4079 96.9208L39.3993 96.9279L39.3931 96.9437C41.3091 98.3217 43.322 99.5243 45.4199 100.545C44.263 99.7794 42.5592 98.3891 41.7989 96.5317C40.6954 93.8761 41.7409 91.5187 41.9171 91.1215C41.9324 91.0869 41.9412 91.0672 41.9413 91.0634C41.9447 91.0683 41.9726 91.0914 42.0214 91.1319C42.4581 91.494 44.5666 93.2424 45.7601 95.6522C46.9389 98.0517 46.7027 100.548 46.614 101.102C47.9867 101.716 49.3939 102.253 50.8322 102.713C51.3554 102.88 51.8803 103.036 52.4068 103.181C51.2046 102.558 49.8348 101.622 48.9687 100.329C47.307 97.8809 47.8875 95.3519 47.9889 94.9101L47.9969 94.8749C48.0009 94.8566 48.003 94.8458 48.0026 94.843C48.0075 94.8476 48.042 94.8666 48.102 94.8997C48.6281 95.1896 51.1125 96.5586 52.8409 98.7474C54.3574 100.683 54.7608 102.893 54.8521 103.771C57.0809 104.235 59.333 104.502 61.5964 104.572L65.3129 101.853L69.0414 104.581C71.4267 104.53 73.8002 104.26 76.1478 103.771C76.2391 102.893 76.6425 100.683 78.159 98.7474C79.8875 96.5586 82.3717 95.1896 82.8978 94.8998C82.9245 94.885 82.9461 94.8731 82.9624 94.864C82.9659 94.862 82.9691 94.8602 82.9721 94.8585C82.9823 94.8527 82.9896 94.8484 82.9938 94.8456C82.9955 94.8445 82.9967 94.8436 82.9973 94.843C82.9967 94.8472 83.0019 94.8701 83.0111 94.9101C83.1125 95.3519 83.693 97.8809 82.0312 100.329C81.1651 101.622 79.7953 102.558 78.5931 103.181C79.1196 103.036 79.6445 102.88 80.1677 102.713C81.6061 102.253 83.0132 101.716 84.386 101.102C84.2973 100.548 84.061 98.0517 85.2398 95.6522C86.4334 93.2424 88.5419 91.494 88.9785 91.1319C89.027 91.0917 89.0552 91.0682 89.0587 91.0634C89.0588 91.0672 89.0675 91.0869 89.0829 91.1215C89.259 91.5187 90.3045 93.8761 89.201 96.5317C88.4408 98.3891 86.7369 99.7794 85.58 100.545C87.6779 99.5243 89.6908 98.3217 91.6069 96.9437L91.6038 96.936L91.6006 96.9279L91.5921 96.9209L91.5916 96.9205C91.5755 96.9072 91.5663 96.8996 91.5642 96.8986L91.5654 96.8982L91.5664 96.8977L91.5682 96.8968L91.571 96.8951C91.5745 96.893 91.5791 96.89 91.5848 96.8862C91.3966 96.3744 90.6825 93.9957 91.3528 91.4656V91.4646C92.0347 88.926 93.7502 86.8656 94.1016 86.4436C94.1203 86.4211 94.1352 86.4032 94.1459 86.3902C94.1572 86.3763 94.1637 86.3679 94.1648 86.3653C94.1653 86.3671 94.1689 86.3729 94.1755 86.3827L94.1956 86.4121C94.4289 86.7516 95.8835 88.8674 95.3151 91.6417C94.9056 93.6835 93.4062 95.3932 92.45 96.2965C92.4839 96.2744 92.5185 96.252 92.554 96.2291C92.5882 96.2072 92.6231 96.1848 92.6588 96.1621C93.0045 95.8968 93.3469 95.6256 93.6859 95.3485C95.1086 94.1854 96.446 92.9384 97.6932 91.6162L97.6909 91.6149L97.6684 91.6024C97.6616 91.5987 97.6561 91.5962 97.6561 91.5962C97.6582 91.5951 97.6643 91.5896 97.6743 91.5798C97.398 91.1144 96.268 88.9318 96.4557 86.3616H96.4546C96.6507 83.7744 97.9623 81.4652 98.2263 81.0005C98.255 80.95 98.2713 80.9213 98.2724 80.9164L98.2728 80.917L98.2734 80.9178L98.2757 80.9206C98.2783 80.9235 98.2823 80.9277 98.2878 80.9332C98.2932 80.9388 98.3 80.9456 98.3081 80.9538L98.3094 80.9552C98.5915 81.2395 100.385 83.0478 100.328 85.8491C100.294 87.8629 99.2017 89.7438 98.4456 90.7972C99.9725 89.0907 101.354 87.2673 102.581 85.3447C102.185 84.878 100.764 82.9847 100.504 80.5109C100.242 77.9595 101.13 75.4751 101.31 74.9709L101.31 74.9705C101.317 74.9515 101.323 74.9353 101.327 74.922C101.336 74.8969 101.341 74.8823 101.341 74.879C101.343 74.8814 101.358 74.8917 101.383 74.9099C101.705 75.1364 103.769 76.588 104.195 79.3329C104.452 80.9602 103.996 82.6221 103.519 83.8032C104.535 82.0522 105.426 80.2267 106.187 78.339C105.595 77.8171 104.08 76.2854 103.457 74.0886H103.456C102.768 71.6396 103.223 69.0437 103.315 68.5174V68.5174C103.318 68.4988 103.321 68.4828 103.323 68.4694C103.325 68.4594 103.326 68.4509 103.327 68.4439C103.329 68.4315 103.33 68.4241 103.33 68.4219C103.332 68.4239 103.347 68.4312 103.375 68.4441L103.375 68.4442C103.726 68.6078 105.992 69.6662 106.871 72.2821C107.261 73.4316 107.27 74.6669 107.141 75.7335C107.669 74.1332 108.107 72.4943 108.45 70.8237C107.68 70.3181 106.16 69.13 105.271 67.2688V67.2677C104.188 64.9858 104.197 62.3449 104.198 61.8081C104.198 61.7491 104.198 61.7155 104.197 61.7106L104.198 61.711L104.199 61.7114L104.2 61.7118L104.201 61.7122L104.204 61.7131L104.207 61.7141C104.215 61.7164 104.227 61.7195 104.243 61.7237L104.244 61.724C104.608 61.8208 107.012 62.4603 108.313 64.8823C108.7 65.5993 108.924 66.3845 109.045 67.1484C109.216 65.7698 109.345 64.4146 109.431 63.0836C108.547 62.6782 107.006 61.791 105.902 60.2264H105.901C104.464 58.1771 104.014 55.5716 103.919 55.0207C103.908 54.9574 103.902 54.9207 103.899 54.9161C103.9 54.9166 103.905 54.9172 103.912 54.9179L103.945 54.9207C104.311 54.9506 106.782 55.1531 108.474 57.3222C108.965 57.9486 109.314 58.6663 109.561 59.3831C109.567 58.0221 109.526 56.6891 109.437 55.3851C108.549 55.1751 106.754 54.5853 105.308 53.1366V53.1377C103.548 51.3629 102.633 48.8515 102.435 48.3099C102.425 48.2821 102.417 48.2595 102.411 48.2424L102.404 48.2261C102.402 48.2195 102.4 48.2143 102.398 48.2107C102.397 48.2076 102.395 48.2048 102.395 48.2048C102.398 48.2054 102.413 48.2039 102.439 48.2014C102.797 48.1666 105.26 47.9279 107.309 49.7894C108.156 50.5553 108.749 51.5558 109.158 52.5043C108.948 50.8499 108.656 49.2466 108.283 47.6968C107.65 47.7008 105.424 47.574 103.445 46.1755V46.1744C101.404 44.7212 100.019 42.3752 99.7085 41.8498L99.708 41.8488C99.6697 41.784 99.648 41.7472 99.6435 41.7434C99.6459 41.7434 99.6588 41.7398 99.6815 41.7333C100.011 41.6393 102.396 40.9594 104.773 42.4697C106.342 43.4621 107.373 45.1666 107.936 46.3568C107.708 45.5326 107.455 44.7244 107.179 43.9324C106.708 42.5842 106.169 41.2903 105.564 40.0514C105.533 40.083 105.506 40.11 105.484 40.1322C105.489 40.1442 105.493 40.1529 105.495 40.158C105.496 40.1619 105.496 40.1638 105.495 40.1634C105.495 40.165 105.474 40.1709 105.435 40.1797C105.417 40.1976 105.407 40.208 105.405 40.211C105.405 40.211 105.405 40.2098 105.404 40.2081C105.404 40.2068 105.403 40.2052 105.402 40.2037L105.399 40.1961L105.396 40.1883C104.895 40.2921 102.593 40.6292 100.271 39.5212V39.5222C97.9857 38.4228 96.1262 36.3045 95.6945 35.8127C95.6384 35.7488 95.6062 35.7121 95.6006 35.7091C95.6019 35.7089 95.606 35.707 95.613 35.7036C95.6183 35.7011 95.6252 35.6977 95.6337 35.6934C95.9295 35.5465 98.1528 34.4422 100.821 35.5581C102.757 36.3623 104.205 38.1442 104.945 39.2406C104.763 38.8385 104.544 38.3297 104.323 37.7493C103.346 36.0972 102.235 34.5568 100.994 33.1309L100.991 33.1319C100.985 33.1418 100.979 33.1497 100.976 33.1556C100.972 33.1618 100.969 33.1658 100.969 33.1675L100.967 33.1641C100.965 33.1605 100.961 33.1547 100.955 33.1468C100.48 33.3385 98.2819 34.0765 95.7402 33.351H95.7412C93.2519 32.6316 90.9146 30.8012 90.353 30.3614L90.3519 30.3606C90.2761 30.3012 90.2329 30.2674 90.2264 30.2654C90.2273 30.265 90.2296 30.2634 90.2334 30.2606C90.2375 30.2576 90.2432 30.2532 90.2506 30.2475C90.4912 30.064 92.474 28.5511 95.4063 29.2392C96.9251 29.5924 98.2928 30.494 99.3014 31.3376L98.9042 30.0959C98.3621 29.1655 97.8174 28.0957 97.415 26.992C96.2532 23.7534 97.0535 21.155 97.0832 21.1539C97.0927 21.116 100.811 24.1499 101.745 27.6004ZM69.6734 50.8584C70.1842 51.1415 70.7657 51.283 71.418 51.283C72.378 51.283 73.1842 50.963 73.8365 50.323L73.2457 49.723C73.0119 49.9507 72.738 50.1291 72.4242 50.2584C72.1103 50.3815 71.7842 50.443 71.4457 50.443C70.9596 50.443 70.5288 50.3384 70.1534 50.1291C69.778 49.9138 69.4857 49.6153 69.2765 49.2338C69.0673 48.8522 68.9627 48.4153 68.9627 47.923C68.9627 47.4307 69.0673 46.9938 69.2765 46.6122C69.4857 46.2307 69.778 45.9353 70.1534 45.7261C70.5288 45.5107 70.9596 45.403 71.4457 45.403C72.1473 45.403 72.7257 45.6399 73.1811 46.1138L73.7996 45.5599C73.4796 45.2338 73.1165 44.9876 72.7103 44.8214C72.3103 44.6491 71.8796 44.563 71.418 44.563C70.7657 44.563 70.1842 44.7076 69.6734 44.9968C69.1688 45.2799 68.7719 45.6768 68.4826 46.1876C68.1996 46.6984 68.058 47.2768 68.058 47.923C68.058 48.5691 68.1996 49.1476 68.4826 49.6584C68.7719 50.1691 69.1688 50.5691 69.6734 50.8584ZM53.0105 51.0245C53.4844 51.1907 53.9705 51.2738 54.469 51.2738C54.9921 51.2738 55.4474 51.1968 55.8351 51.043C56.229 50.883 56.5336 50.6584 56.749 50.3691C56.9644 50.0738 57.072 49.7353 57.072 49.3538C57.072 48.9907 56.9859 48.6891 56.8136 48.4491C56.6413 48.203 56.3674 48.003 55.9921 47.8491C55.6228 47.6891 55.1244 47.5599 54.4967 47.4615C53.8997 47.363 53.469 47.2307 53.2044 47.0645C52.9459 46.8984 52.8167 46.6707 52.8167 46.3815C52.8167 46.0861 52.9644 45.843 53.2597 45.6522C53.5551 45.4615 53.9336 45.3661 54.3951 45.3661C54.7336 45.3661 55.069 45.4245 55.4013 45.5415C55.7336 45.6584 56.029 45.8245 56.2874 46.0399L56.7582 45.403C56.432 45.1384 56.0628 44.9353 55.6505 44.7938C55.2444 44.6461 54.8228 44.5722 54.3859 44.5722C53.912 44.5722 53.4874 44.6491 53.112 44.803C52.7367 44.9568 52.4444 45.1691 52.2351 45.4399C52.0259 45.7107 51.9213 46.0184 51.9213 46.363C51.9213 46.9168 52.1151 47.3445 52.5028 47.6461C52.8905 47.9476 53.5244 48.163 54.4044 48.2922C55.0259 48.3845 55.4751 48.5168 55.752 48.6891C56.029 48.8553 56.1674 49.0861 56.1674 49.3815C56.1674 49.7015 56.0136 49.9599 55.7059 50.1568C55.3982 50.3476 54.9859 50.443 54.469 50.443C54.0505 50.443 53.6413 50.3722 53.2413 50.2307C52.8413 50.083 52.5121 49.8861 52.2536 49.6399L51.7736 50.323C52.1305 50.6245 52.5428 50.8584 53.0105 51.0245ZM59.3357 44.6922H58.4403V51.1538H59.3357V44.6922ZM65.7173 44.6922H66.6127V51.1538H65.7912L62.0804 46.2245V51.1538H61.185V44.6922H62.0065L65.7173 49.6122V44.6922ZM76.0434 50.3138H79.8834V51.1538H75.148V44.6922H79.828V45.523H76.0434V47.4707H79.6618V48.2922H76.0434V50.3138ZM75.7662 67.9705C76.5508 68.3243 77.1662 68.8474 77.6123 69.5397C78.0739 70.232 78.3046 71.0089 78.3046 71.8705C78.3046 72.8397 78.02 73.6859 77.4508 74.4089C76.8969 75.132 76.1123 75.6936 75.0969 76.0936C74.0815 76.4936 72.8969 76.6936 71.5431 76.6936C70.1892 76.6936 68.9969 76.4936 67.9662 76.0936C66.9508 75.6936 66.1585 75.132 65.5892 74.4089C65.0354 73.6705 64.7585 72.8243 64.7585 71.8705C64.7585 71.0089 64.9815 70.232 65.4277 69.5397C65.8892 68.8474 66.5123 68.3243 67.2969 67.9705C66.6354 67.6166 66.1123 67.1397 65.7277 66.5397C65.3585 65.9397 65.1739 65.2551 65.1739 64.4859C65.1739 63.5936 65.4354 62.8089 65.9585 62.132C66.4969 61.4397 67.2431 60.9013 68.1969 60.5166C69.1662 60.132 70.2815 59.9397 71.5431 59.9397C72.7892 59.9397 73.8892 60.132 74.8431 60.5166C75.8123 60.9013 76.5585 61.4397 77.0815 62.132C77.62 62.8089 77.8892 63.5936 77.8892 64.4859C77.8892 65.2551 77.6969 65.9397 77.3123 66.5397C76.9431 67.1243 76.4277 67.6013 75.7662 67.9705ZM71.5431 62.2474C70.4354 62.2474 69.5431 62.4705 68.8662 62.9166C68.1892 63.3628 67.8508 63.9474 67.8508 64.6705C67.8508 65.3936 68.1892 65.9782 68.8662 66.4243C69.5431 66.8705 70.4354 67.0936 71.5431 67.0936C72.6354 67.0936 73.52 66.8705 74.1969 66.4243C74.8892 65.9782 75.2354 65.3936 75.2354 64.6705C75.2354 63.9474 74.8892 63.3628 74.1969 62.9166C73.52 62.4705 72.6354 62.2474 71.5431 62.2474ZM71.5431 74.2474C72.7739 74.2474 73.7508 74.0243 74.4739 73.5782C75.1969 73.1166 75.5585 72.4936 75.5585 71.709C75.5585 70.9397 75.1892 70.3243 74.4508 69.8628C73.7277 69.4013 72.7585 69.1705 71.5431 69.1705C70.3123 69.1705 69.3277 69.4013 68.5892 69.8628C67.8662 70.3243 67.5046 70.9397 67.5046 71.709C67.5046 72.4936 67.8662 73.1166 68.5892 73.5782C69.3277 74.0243 70.3123 74.2474 71.5431 74.2474ZM58.4233 60.6551C57.4079 60.1936 56.2618 59.9628 54.9848 59.9628C53.6925 59.9628 52.5387 60.1859 51.5233 60.632C50.5233 61.0782 49.7387 61.7089 49.1695 62.5243C48.6156 63.3243 48.3387 64.2397 48.3387 65.2705C48.3387 66.3013 48.6002 67.2166 49.1233 68.0166C49.6618 68.8013 50.4079 69.4166 51.3618 69.8628C52.3156 70.2936 53.4079 70.5089 54.6387 70.5089C56.331 70.5089 57.7618 70.0397 58.931 69.1013V70.9474C58.931 71.932 58.5618 72.709 57.8233 73.2782C57.0848 73.832 56.1618 74.1089 55.0541 74.1089C54.331 74.1089 53.6772 74.0166 53.0925 73.832C52.5079 73.632 52.0464 73.3705 51.7079 73.0474C51.3695 72.7089 51.2002 72.332 51.2002 71.9166H48.4772C48.5387 73.3936 49.1464 74.5474 50.3002 75.3782C51.4695 76.209 53.0618 76.6243 55.0772 76.6243C56.3695 76.6243 57.5079 76.4013 58.4925 75.9551C59.4925 75.5089 60.2695 74.8705 60.8233 74.0397C61.3772 73.1936 61.6541 72.209 61.6541 71.0859V65.2936C61.6541 64.2628 61.3695 63.3474 60.8002 62.5474C60.231 61.732 59.4387 61.1013 58.4233 60.6551ZM57.8464 67.3474C57.1233 67.8551 56.1772 68.1089 55.0079 68.1089C53.8233 68.1089 52.8695 67.8551 52.1464 67.3474C51.4233 66.8243 51.0618 66.1397 51.0618 65.2936C51.0618 64.4474 51.4233 63.7628 52.1464 63.2397C52.8695 62.7166 53.8233 62.4551 55.0079 62.4551C56.1925 62.4551 57.1387 62.7166 57.8464 63.2397C58.5695 63.7628 58.931 64.4474 58.931 65.2936C58.931 66.1397 58.5695 66.8243 57.8464 67.3474ZM46.2282 73.8782H43.459V60.1474H43.1359L37.9898 61.8089V64.3013L40.7359 63.4243V73.8782H37.6436V76.3936H46.2282V73.8782ZM93.9843 69.5397C93.5382 68.8474 92.9228 68.3243 92.1382 67.9705C92.7997 67.6013 93.3151 67.1243 93.6843 66.5397C94.0689 65.9397 94.2612 65.2551 94.2612 64.4859C94.2612 63.5936 93.992 62.8089 93.4535 62.132C92.9305 61.4397 92.1843 60.9013 91.2151 60.5166C90.2612 60.132 89.1612 59.9397 87.9151 59.9397C86.6535 59.9397 85.5382 60.132 84.5689 60.5166C83.6151 60.9013 82.8689 61.4397 82.3305 62.132C81.8074 62.8089 81.5458 63.5936 81.5458 64.4859C81.5458 65.2551 81.7305 65.9397 82.0997 66.5397C82.4843 67.1397 83.0074 67.6166 83.6689 67.9705C82.8843 68.3243 82.2612 68.8474 81.7997 69.5397C81.3535 70.232 81.1305 71.0089 81.1305 71.8705C81.1305 72.8243 81.4074 73.6705 81.9612 74.4089C82.5305 75.132 83.3228 75.6936 84.3382 76.0936C85.3689 76.4936 86.5612 76.6936 87.9151 76.6936C89.2689 76.6936 90.4535 76.4936 91.4689 76.0936C92.4843 75.6936 93.2689 75.132 93.8228 74.4089C94.392 73.6859 94.6766 72.8397 94.6766 71.8705C94.6766 71.0089 94.4458 70.232 93.9843 69.5397ZM85.2382 62.9166C85.9151 62.4705 86.8074 62.2474 87.9151 62.2474C89.0074 62.2474 89.892 62.4705 90.5689 62.9166C91.2612 63.3628 91.6074 63.9474 91.6074 64.6705C91.6074 65.3936 91.2612 65.9782 90.5689 66.4243C89.892 66.8705 89.0074 67.0936 87.9151 67.0936C86.8074 67.0936 85.9151 66.8705 85.2382 66.4243C84.5612 65.9782 84.2228 65.3936 84.2228 64.6705C84.2228 63.9474 84.5612 63.3628 85.2382 62.9166ZM90.8458 73.5782C90.1228 74.0243 89.1458 74.2474 87.9151 74.2474C86.6843 74.2474 85.6997 74.0243 84.9612 73.5782C84.2382 73.1166 83.8766 72.4936 83.8766 71.709C83.8766 70.9397 84.2382 70.3243 84.9612 69.8628C85.6997 69.4013 86.6843 69.1705 87.9151 69.1705C89.1305 69.1705 90.0997 69.4013 90.8228 69.8628C91.5612 70.3243 91.9305 70.9397 91.9305 71.709C91.9305 72.4936 91.5689 73.1166 90.8458 73.5782Z\",\n    fill: \"#2A3138\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAboutUs4);\nexport default __webpack_public_path__ + \"static/media/about-us4.d3ede8071599b0543e5f8dc18fe54796.svg\";\nexport { ForwardRef as ReactComponent };","// utils\nimport { useState, useEffect } from 'react';\n\n// Components\nimport Loading from '@common/Loading';\nimport Navbar from '@userpage/Navbar';\nimport Footer from '@userpage/Footer';\nimport { allApi } from \"@api/api\";\nimport { API_CONSTANTS } from \"@constants/apiurl\";\nimport AboutUsFrontImage from \"@assets/about-us.webp\";\nimport AboutUsBannerImage from \"@assets/about-us-banner.webp\";\nimport AboutUs1Image from \"@assets/about-us1.webp\";\nimport AboutUs2Image from \"@assets/about-us2.webp\";\nimport AboutUs3Image from \"@assets/about-us3.webp\";\nimport AboutUs1Svg from \"@assets/about-us1.svg\";\nimport AboutUs2Svg from \"@assets/about-us2.svg\";\nimport AboutUs3Svg from \"@assets/about-us3.svg\";\nimport AboutUs4Svg from \"@assets/about-us4.svg\";\nimport Image from \"@common/Image\";\n\nconst AboutUs = () => {\n  const [loader, setLoader] = useState(false);\n  const [menuList, setMenuList] = useState([]);\n  const [footerRangeList, setFooterRangeList] = useState([]);\n\n  const fetchMenuList = () => {\n    setLoader(true);\n    allApi(API_CONSTANTS.MENU_LIST_URL, \"\", \"get\")\n      .then((response) => {\n        if (response.status === 200) {\n          let data = response?.data.filter((item, index) => index <= 6);\n          setFooterRangeList(data);\n          data?.push({ name: \"About Us\" });\n          setMenuList(data);\n        }\n      })\n      .catch(() => setLoader(false))\n      .finally(() => setLoader(false));\n  };\n\n  useEffect(() => {\n    fetchMenuList();\n  }, []);\n\n  return (\n    <>\n      {loader ? <Loading /> :\n        <>\n          <Navbar data={menuList} />\n\n          {/* Hero Section */}\n          <div className=\"flex flex-col mt-16 lg:flex-row items-center bg-yellow-50\">\n            <div className=\"w-full lg:w-3/5 h-[250px] sm:h-[350px] md:h-[450px] lg:h-[500px]\">\n              <Image\n                src={AboutUsFrontImage}\n                alt=\"Sweets\"\n                className=\"w-full h-full object-cover\"\n              />\n            </div>\n            <div className=\"w-full lg:w-2/5 flex flex-col px-4 lg:pl-10 py-6 justify-center space-y-4\">\n              <h1 className=\"text-[#1D2E43] font-[playfair] text-[1.5rem] sm:text-[1.8rem] md:text-[2rem] font-bold\">\n                The Taste Of Royal India, Perfected Over Generations.\n              </h1>\n              <p className=\"text-base\">Logo sweets, sweetening celebrations since 1988</p>\n              <button className=\"w-fit px-6 py-2 text-sm sm:text-base text-white bg-[#caa446] rounded-md transition-all duration-300 border border-transparent hover:bg-transparent hover:text-yellow-600 hover:border-yellow-600\">\n                SHOP NOW\n              </button>\n            </div>\n          </div>\n\n          {/* Excellence Section */}\n          <section className=\"container mx-auto text-center py-10 px-4\">\n            <h2 className=\"text-[#1D2E43] font-[playfair] text-[1.8rem] sm:text-[2rem] md:text-[2.1rem] font-bold\">\n              Excellence In Every Morsel\n            </h2>\n            <p className=\"mt-4 max-w-3xl mx-auto\">\n              For over 3 decades, Logo has grown to be synonymous with premium quality Indian Sweets. It has created a niche for itself for being one of the most premium and giftable brands in Bengaluru today.\n            </p>\n            <Image src={AboutUsBannerImage} alt=\"Sweets Grid\" className=\"mt-6 mx-auto max-w-full h-auto\" />\n          </section>\n\n          {/* Quality Section */}\n          <section className=\"container mx-auto grid md:grid-cols-2 gap-8 px-4 py-8 items-center\">\n            <div className=\"space-y-4\">\n              <h3 className=\"text-[#1D2E43] font-[playfair] text-[1.6rem] sm:text-[1.9rem] font-bold\">\n                Quality That Delights, In Every Bite.\n              </h3>\n              <p>\n                Over decades, Logo has grown to be synonymous with premium quality Indian sweets. Using technique, skill and science, our mithai artisans have perfected our recipes, packaging and processes. At hygienic, state-of-the-art making facility we mould over 30,000 kgs of sweets everyday to deliver noticeable freshness, patrons can feel, taste and enjoy. Only absolutely fresh, carefully selected ingredients sourced from the best across the country go into making every bite.\n              </p>\n            </div>\n            <Image src={AboutUs1Image} alt=\"Holding Sweet\" className=\"w-full h-auto\" />\n          </section>\n\n          {/* About Us Section */}\n          <section className=\"container mx-auto grid md:grid-cols-2 gap-8 px-4 py-8 items-center\">\n            <Image src={AboutUs2Image} alt=\"Round Sweets\" className=\"w-full h-auto\" />\n            <div className=\"space-y-4\">\n              <h3 className=\"text-[#1D2E43] font-[playfair] text-[1.6rem] sm:text-[1.9rem] font-bold\">\n                Taste Of Royal India\n              </h3>\n              <p>\n                Logo owes its success to its know-how that is the culmination of tradition, innovation and uncompromising quality. The dynamism of Logo is also the result of its unrelenting quest to restyle and update its product range, packaging, to cater to the changing demographic and dynamics of changing India.\n              </p>\n            </div>\n          </section>\n\n          {/* Philosophy Section */}\n          <section className=\"container mx-auto grid md:grid-cols-2 gap-8 px-4 py-8 items-center\">\n            <div className=\"space-y-4\">\n              <h3 className=\"text-[#1D2E43] font-[playfair] text-[1.6rem] sm:text-[1.9rem] font-bold\">\n                Luxurious Mithais, Accessible To Everyone\n              </h3>\n              <p>\n                We are obsessed with authenticity and believe in curating flavours that suit your taste and your celebrations. The sweet smelling saffron in our Malpua we get from Kashmir, and the melt-in-your-mouth paneer in our savouries from Delhi - because great taste can never have boundaries.\n              </p>\n            </div>\n            <Image src={AboutUs3Image} alt=\"Luxury Sweets\" className=\"w-full h-auto\" />\n          </section>\n\n          {/* Awards */}\n          <section className=\"w-full text-center py-10 px-8 bg-gray-50\">\n            <h2 className=\"text-[#1D2E43] font-[playfair] text-[1.8rem] sm:text-[2rem] md:text-[2.1rem] font-bold\">\n              Awards and Accreditations\n            </h2>\n            <p className=\"mt-4\">\n              As the most hygienic facility in the country, Logo has also been accredited by multiple health and food societies of the world. These accreditations require one adhere to strict quality norms Logo is one of the select few companies in India who has an ISO 22000:2018 certification. It is also a Halal Certified Company, along with certifications from Spice Board of India.\n            </p>\n            <p className=\"mt-6\">\n              In addition, Logo's quest for authenticity and precision has won us numerous accolades, including the Times Food Award for the Best Mithai in Bangalore for 12 years in a row.\n            </p>\n          </section>\n\n          {/* Certifications Section */}\n          <section className=\"container mx-auto text-center py-10 px-4 bg-gray-50\">\n            <h2 className=\"text-[#1D2E43] font-[playfair] text-[1.8rem] sm:text-[2rem] md:text-[2.1rem] font-bold\">\n              Certifications\n            </h2>\n            <div className=\"flex flex-wrap justify-center items-center gap-8 mt-6\">\n              <Image src={AboutUs1Svg} alt=\"Cert1\" className=\"h-20 sm:h-24 md:h-28\" />\n              <Image src={AboutUs2Svg} alt=\"Cert2\" className=\"h-20 sm:h-24 md:h-28\" />\n              <Image src={AboutUs3Svg} alt=\"Cert3\" className=\"h-20 sm:h-24 md:h-28\" />\n              <Image src={AboutUs4Svg} alt=\"Cert4\" className=\"h-20 sm:h-24 md:h-28\" />\n            </div>\n          </section>\n\n          <Footer data={footerRangeList}/>\n        </>\n      }\n    </>\n  );\n};\n\nexport default AboutUs;","// Utils\nimport { useTranslation } from \"react-i18next\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\n// components\nimport { shopdata } from '@constants/shopdata.js';\nimport { API_CONSTANTS } from \"@constants/apiurl\";\nimport { allApi } from \"@api/api\";\nimport Logo from \"@assets/logo.webp\";\nimport { ROUTES_CONSTANTS } from \"@constants/routesurl\";\n\nconst Footer = ({data}) => {\n    const { t } = useTranslation(\"msg\");\n    const [submitted, setSubmitted] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [rangeData, setRangeData] = useState([]);\n    const [email, setEmail] = useState(\"\");\n    const navigate = useNavigate();\n\n    const subscribe = () => {\n        let body = {\n            email: email\n        };\n        allApi(API_CONSTANTS.SUBSCRIBE_USER_BY_MAIL_URL, body, \"post\")\n        .then((response) => {\n            if (response?.status === 200) {\n                setErrorMessage(response?.data?.message);\n            } else {\n                setErrorMessage(\"\");\n            }\n            setSubmitted(true);\n            setEmail(\"\");\n        })\n        .catch((err) => {})\n        .finally(() => {});\n    };\n\n    useEffect(()=>{\n       if (!data || data.length < 6) return;\n\n       const category = [\n            {\n                name: t(\"our_range\"),\n                list: [\n                    {\n                        name: data[0]?.name,\n                        url: `${ROUTES_CONSTANTS?.VIEW_CATEGORY_DESCRIPTION}/${data[0]?.name}`\n                    },\n                    {\n                        name: data[1]?.name,\n                        url: `${ROUTES_CONSTANTS?.VIEW_CATEGORY_DESCRIPTION}/${data[1]?.name}`\n                    },\n                    {\n                        name: data[2]?.name,\n                        url: `${ROUTES_CONSTANTS?.VIEW_CATEGORY_DESCRIPTION}/${data[2]?.name}`\n                    },\n                    {\n                        name: data[3]?.name,\n                        url: `${ROUTES_CONSTANTS?.VIEW_CATEGORY_DESCRIPTION}/${data[3]?.name}`\n                    },\n                    {\n                        name: data[4]?.name,\n                        url: `${ROUTES_CONSTANTS?.VIEW_CATEGORY_DESCRIPTION}/${data[4]?.name}`\n                    },\n                    {\n                        name: data[5]?.name,\n                        url: `${ROUTES_CONSTANTS?.VIEW_CATEGORY_DESCRIPTION}/${data[5]?.name}`\n                    }\n                ]\n            },\n            {\n                name: t(\"about_us\"),\n                list: [\n                    {\n                        name: t(\"company\"),\n                        url: `${ROUTES_CONSTANTS?.ABOUT_US}`\n                    },\n                    {\n                        name: t(\"contact_us\"),\n                        url: `${ROUTES_CONSTANTS?.CONTACT_US}`\n                    },\n                    {\n                        name: t(\"login\"),\n                        url: `${ROUTES_CONSTANTS?.SIGN_IN}`\n                    },\n                    {\n                        name: t(\"track_your_orders\"),\n                        url: `${ROUTES_CONSTANTS?.TRACK_ORDER}`\n                    }\n                ]\n            },\n            {\n                name: t(\"legal\"),\n                list: [\n                    {\n                        name: t(\"terms_and_conditions\"),\n                        url: `${ROUTES_CONSTANTS?.TERMS_AND_CONDITION}`\n                    },\n                    {\n                        name: t(\"shipping_policy\"),\n                        url: `${ROUTES_CONSTANTS?.SHIPPING_POLICY}`\n                    },\n                    {\n                        name: t(\"return_exchange_policy\"),\n                        url: `${ROUTES_CONSTANTS?.RETURN_AND_EXCHANGE_POLICY}`\n                    },\n                    {\n                        name: t(\"privacy_policy\"),\n                        url: `${ROUTES_CONSTANTS?.PRIVACY_POLICY}`\n                    }\n                ]\n            }\n       ];\n       setRangeData(category)\n    },[data]);\n\n    const handleRangeAttributes=(url)=>{\n        navigate(url)\n    }\n\n    return (\n        <footer className=\"w-full py-2\">\n            <div className=\"w-full bg-[#fffbf5] px-10 py-10\">\n                {/* Top Header Section */}\n                <div className=\"flex flex-col lg:flex-row items-center justify-between gap-7 lg:gap-0 border-b border-[#b69754]\">\n                    <a href={shopdata?.website} className=\"flex justify-center lg:justify-start\">\n                        <img src={Logo} className=\"w-[154px]\" alt={shopdata?.title} />\n                    </a>\n                    <div className=\"flex items-center gap-2 px-7\">\n                        <img src={shopdata?.logo2} alt=\"\" className=\"w-[100px]\" />\n                    </div>\n                </div>\n\n                {/* Main Content Section */}\n                <div className=\"flex flex-col lg:flex-row justify-between py-8 min-[500px]:py-14 gap-8 lg:gap-0\">\n                    {/* Categories Section */}\n                    <div className=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 sm:gap-12 xl:gap-24\">\n                        {rangeData?.map((item, i) => {\n                            return (\n                                <div key={Math.random()} className=\"block\">\n                                    <h6 className=\"text-[1rem] text-gray-800 font-bold mb-4 text-center lg:text-left\">\n                                        {item?.name}\n                                    </h6>\n                                    <ul className=\"grid gap-2 text-center lg:text-left\">\n                                        {item?.list?.map((list, i) => {\n                                            return (\n                                                <li key={i}>\n                                                    <span onClick={()=>{ handleRangeAttributes(list?.url) }} className=\"text-gray-600 text-[0.85rem] hover:cursor-pointer hover:text-gray-900\">\n                                                        {list?.name}\n                                                    </span>\n                                                </li>\n                                            );\n                                        })}\n                                    </ul>\n                                </div>\n                            );\n                        })}\n                    </div>\n\n                    {/* Subscription Section */}\n                    <div className=\"block lg:w-[50%]\">\n                        <h5 className=\"font-manrope font-semibold text-[1.2rem] text-[#b69754] leading-9 mb-6 text-center lg:text-left\">\n                            {t(\"we_happy_to_assist_you\")}\n                        </h5>\n                        <div className=\"lg:bg-gray-100 lg:rounded-lg lg:h-16 lg:p-1.5 flex flex-col lg:flex-row items-center gap-6 lg:gap-0\">\n                            <input \n                                type=\"email\" \n                                name=\"email\" \n                                value={email} \n                                onChange={(e) => setEmail(e?.target?.value)} \n                                className=\"py-2 px-6 bg-gray-100 rounded-lg text-gray-900 placeholder:text-gray-500 focus:outline-none flex-1 w-full max-w-xl mx-auto lg:w-auto lg:py-5 lg:px-7 lg:bg-transparent\"\n                                placeholder=\"Enter email address\" \n                            />\n                            <button \n                                type=\"button\" \n                                onClick={subscribe} \n                                className=\"py-3.5 px-7 bg-[#b69754] shadow-md rounded-lg text-white font-semibold hover:bg-[#9a8048]\"\n                            >\n                                {t(\"subscribe\")}\n                            </button>\n                        </div>\n                        {submitted && (\n                            <span className=\"text-[#b69754] text-[0.8rem] mt-2\">\n                                {errorMessage ? errorMessage : \"Your email has been subscribed\"}\n                            </span>\n                        )}\n\n                        {/* Shop Details Section */}\n                        <div className=\"w-full flex flex-col lg:flex-row gap-8 lg:gap-28 mt-8\">\n                            <div className=\"timing\">\n                                <p className=\"text-[1rem] text-gray-800 font-bold pb-4\">{t(\"timing\")}:</p>\n                                <div className=\"text-gray-600 text-[0.85rem] hover:text-gray-900\">{shopdata?.timing?.days}</div>\n                                <div className=\"text-gray-600 text-[0.85rem] hover:text-gray-900\">{shopdata?.timing?.time}</div>\n                            </div>\n                            <div className=\"email\">\n                                <p className=\"text-[1rem] text-gray-800 font-bold pb-4\">{t(\"email\")}:</p>\n                                <a href={`mailto:${shopdata?.email}`} className=\"no-underline text-gray-600 text-[0.85rem] hover:text-gray-900\">\n                                    {shopdata?.email}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Footer Bottom Section */}\n            <div className=\"py-5 px-10 border-t border-gray-200\">\n                <div className=\"flex flex-col lg:flex-row items-center justify-between gap-8 lg:gap-0\">\n                    <span className=\"text-sm text-gray-500\">\n                        © {new Date().getFullYear()} {t(\"copyright\")} <a href={shopdata?.website}>{shopdata?.title}</a>, {t(\"all_rights_reserved\")}\n                    </span>\n                    <div className=\"flex mt-4 space-x-4 sm:justify-center sm:mt-0\">\n                        {shopdata?.social?.map((item, i) => (\n                            <a\n                                href={item?.url}\n                                key={i}\n                                className=\"w-9 h-9 rounded-full text-white bg-[#b69754] flex justify-center items-center hover:#9a8048\"\n                            >\n                                <i className={`${item?.icon} hover:cursor-pointer`}></i>\n                            </a>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import { create } from 'zustand';\n\nconst useCartStore = create((set) => ({\n    cart: JSON.parse(localStorage.getItem('cart')) || [],\n    triggerUpdate: false, \n    setTrigger: () => set((state) => ({ triggerUpdate: !state.triggerUpdate })),\n    setCart: (newCart) => {\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        set({ cart: newCart, triggerUpdate: false }); // Reset trigger after update\n    }\n}));\n\nexport default useCartStore;","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n"],"names":["apiBaseURL","process","allApi","dataurl","data","method","contentType","headers","requestData","FormData","Object","keys","forEach","key","append","axios","post","concat","JSON","stringify","get","delete","put","allApiWithHeaderToken","responseType","token","parse","localStorage","getItem","axiosInstance","create","baseURL","interceptors","response","use","error","status","removeItem","window","location","href","Promise","reject","_ref","alt","height","src","width","className","onClick","isLoaded","setIsLoaded","useState","isLoading","setIsLoading","_jsxs","children","_jsx","LazyLoadImage","beforeLoad","handleLoad","afterLoad","API_CONSTANTS","SIGNUP","LOGIN","LOGOUT","FORGOT_PASSWORD","RESET_PASSWORD","COMMON_CATEGORIES_URL","COMMON_SUB_CATEGORIES_URL","COMMON_PRODUCTS_URL","COMMON_INVENTORY_URL","COMMON_ORDER_URL","COMMON_COUPON_URL","COMMON_REPORT_URL","COMMON_DISCOUNT_URL","COMMON_USERS_URL","COMMON_ADRESESS_URL","COMMON_ADMIN_DASHBOARD_URL","COMMON_BLOGS_URL","COMMON_PRODUCT_REVIEW_URL","COMMON_FEST_PRODUCTS_URL","COMMON_SUBSCIBER_URL","COMMON_CUSTOMER_ENQUIRY_URL","BLOGS_URL","SNACK_RANGE_URL","SPECIALITY_CATEGORY_URL","GIFTING_CATEGORY_URL","ALL_CATEGORY_URL","ALL_PRODUCTS_URL","MENU_LIST_URL","GET_PRODUCT_BY_SUBCATEGORY_ID_URL","ALL_SUB_CATEGORY_URL","PRODUCT_REVIEW_URL","PRODUCT_REVIEW_BY_ID_URL","ACTIVE_FEST_SPECIAL","SUBSCRIBE_USER_BY_MAIL_URL","SEND_PHONE_OTP_URL","VERIFY_PHONE_OTP_URL","PAYMENT_INTENT_CREATE","PAYMENT_VERIFY","ADD_CONTACT_DETAILS","GET_ALL_SUBCATEGORY_BY_CATEGORY_NAME_URL","GET_PRODUCT_BY_CATEGORY_NAME_URL","GET_PRODUCT_BY_SUB_CATEGORY_NAME_URL","GET_PRODUCT_BY_FESTIVAL_SPECIAL_NAME_URL","ROUTES_CONSTANTS","HOME","VIEW_CART","VIEW_BLOG_DESCRIPTION","VIEW_COLLECTION_DESCRIPTION","VIEW_PRODUCT_DESCRIPTION","SIGN_IN","REGISTER","PAYMENT","PAYMENT_CONFIRMED","PAYMENT_REJECTED","VIEW_CATEGORY_DESCRIPTION","VIEW_SUB_CATEGORY_DESCRIPTION","ABOUT_US","TRACK_ORDER","CONTACT_US","TERMS_AND_CONDITION","SHIPPING_POLICY","RETURN_AND_EXCHANGE_POLICY","PRIVACY_POLICY","DASHBOARD","PRODUCTS","ORDERS","INVENTORY","CATEGORIES","SUB_CATEGORIES","COUPONS","REPORTS","USERS","ADDRESSES","DISCOUNT","REVIEWS","BLOGS","FEST","SUBSCRIBER","CUSTOMER_ENQUIRIES","CREATE_CATEGORY","CREATE_SUB_CATEGORY","CREATE_PRODUCT","CREATE_INVENTORY","CREATE_ORDER","CREATE_COUPON","CREATE_REPORT","CREATE_USER","CREATE_DISCOUNT","CREATE_ADDRESESS","CREATE_BLOG","CREATE_FEST_PRODUCT","EDIT_CATEGORY","EDIT_SUB_CATEGORY","EDIT_PRODUCT","EDIT_INVENTORY","VIEW_ORDER","EDIT_COUPON","EDIT_REPORT","EDIT_USER","EDIT_DISCOUNT","EDIT_ADDRESESS","EDIT_BLOG","EDIT_FEST_PRODUCT","AboutUs","loader","setLoader","menuList","setMenuList","footerRangeList","setFooterRangeList","useEffect","then","filter","item","index","push","name","catch","finally","_Fragment","Loading","Navbar","Image","AboutUsFrontImage","AboutUsBannerImage","AboutUs1Image","AboutUs2Image","AboutUs3Image","AboutUs1Svg","AboutUs2Svg","AboutUs3Svg","AboutUs4Svg","Footer","_shopdata$timing","_shopdata$timing2","_shopdata$social","t","useTranslation","submitted","setSubmitted","errorMessage","setErrorMessage","rangeData","setRangeData","email","setEmail","navigate","useNavigate","_data$","_data$2","_data$3","_data$4","_data$5","_data$6","_data$7","_data$8","_data$9","_data$10","_data$11","_data$12","length","category","list","url","shopdata","website","Logo","title","logo2","map","i","_item$list","Math","random","type","value","onChange","e","_e$target","target","placeholder","subscribe","body","_response$data","message","err","timing","days","time","Date","getFullYear","social","icon","set","cart","triggerUpdate","setTrigger","state","setCart","newCart","setItem","createStoreImpl","createState","listeners","Set","setState","partial","replace","nextState","is","previousState","assign","listener","getState","api","getInitialState","initialState","add","identity","arg","createImpl","createStore","useBoundStore","selector","arguments","undefined","slice","React","useStore"],"sourceRoot":""}